// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: company.proto

package companypb

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Street   string `protobuf:"bytes,1,opt,name=Street,proto3" json:"Street,omitempty"`
	StreetNo int32  `protobuf:"varint,2,opt,name=StreetNo,proto3" json:"StreetNo,omitempty"`
	PinNo    int32  `protobuf:"varint,3,opt,name=PinNo,proto3" json:"PinNo,omitempty"`
	District string `protobuf:"bytes,4,opt,name=District,proto3" json:"District,omitempty"`
	State    string `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	Nation   string `protobuf:"bytes,6,opt,name=Nation,proto3" json:"Nation,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{0}
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetStreetNo() int32 {
	if x != nil {
		return x.StreetNo
	}
	return 0
}

func (x *Address) GetPinNo() int32 {
	if x != nil {
		return x.PinNo
	}
	return 0
}

func (x *Address) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

type RegisterCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Address         *Address `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Emails          []string `protobuf:"bytes,3,rep,name=Emails,proto3" json:"Emails,omitempty"`
	Mobiles         []string `protobuf:"bytes,4,rep,name=Mobiles,proto3" json:"Mobiles,omitempty"`
	Companyusername string   `protobuf:"bytes,5,opt,name=Companyusername,proto3" json:"Companyusername,omitempty"`
	TypeID          uint32   `protobuf:"varint,6,opt,name=TypeID,proto3" json:"TypeID,omitempty"`
	OwnerID         string   `protobuf:"bytes,7,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
}

func (x *RegisterCompanyRequest) Reset() {
	*x = RegisterCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCompanyRequest) ProtoMessage() {}

func (x *RegisterCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterCompanyRequest.ProtoReflect.Descriptor instead.
func (*RegisterCompanyRequest) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterCompanyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterCompanyRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RegisterCompanyRequest) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *RegisterCompanyRequest) GetMobiles() []string {
	if x != nil {
		return x.Mobiles
	}
	return nil
}

func (x *RegisterCompanyRequest) GetCompanyusername() string {
	if x != nil {
		return x.Companyusername
	}
	return ""
}

func (x *RegisterCompanyRequest) GetTypeID() uint32 {
	if x != nil {
		return x.TypeID
	}
	return 0
}

func (x *RegisterCompanyRequest) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

type GetCompanyTypesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *GetCompanyTypesRes) Reset() {
	*x = GetCompanyTypesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyTypesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyTypesRes) ProtoMessage() {}

func (x *GetCompanyTypesRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyTypesRes.ProtoReflect.Descriptor instead.
func (*GetCompanyTypesRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{2}
}

func (x *GetCompanyTypesRes) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GetCompanyTypesRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CompanyResponce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Address         *Address `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Emails          []string `protobuf:"bytes,3,rep,name=Emails,proto3" json:"Emails,omitempty"`
	Mobiles         []string `protobuf:"bytes,4,rep,name=Mobiles,proto3" json:"Mobiles,omitempty"`
	Companyusername string   `protobuf:"bytes,5,opt,name=Companyusername,proto3" json:"Companyusername,omitempty"`
	CompanyID       string   `protobuf:"bytes,6,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *CompanyResponce) Reset() {
	*x = CompanyResponce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyResponce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyResponce) ProtoMessage() {}

func (x *CompanyResponce) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyResponce.ProtoReflect.Descriptor instead.
func (*CompanyResponce) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{3}
}

func (x *CompanyResponce) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyResponce) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CompanyResponce) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *CompanyResponce) GetMobiles() []string {
	if x != nil {
		return x.Mobiles
	}
	return nil
}

func (x *CompanyResponce) GetCompanyusername() string {
	if x != nil {
		return x.Companyusername
	}
	return ""
}

func (x *CompanyResponce) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Permission string `protobuf:"bytes,2,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{4}
}

func (x *Permission) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Permission) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type AddEmployeeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	RoleID    uint32 `protobuf:"varint,2,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	CompanyID string `protobuf:"bytes,3,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	CTC       uint32 `protobuf:"varint,4,opt,name=CTC,proto3" json:"CTC,omitempty"`
}

func (x *AddEmployeeReq) Reset() {
	*x = AddEmployeeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEmployeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmployeeReq) ProtoMessage() {}

func (x *AddEmployeeReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmployeeReq.ProtoReflect.Descriptor instead.
func (*AddEmployeeReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{5}
}

func (x *AddEmployeeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddEmployeeReq) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *AddEmployeeReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *AddEmployeeReq) GetCTC() uint32 {
	if x != nil {
		return x.CTC
	}
	return 0
}

type AttachRoleWithPermisssionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID       uint32 `protobuf:"varint,1,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	PermissionID uint32 `protobuf:"varint,2,opt,name=PermissionID,proto3" json:"PermissionID,omitempty"`
	CompanyID    string `protobuf:"bytes,3,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *AttachRoleWithPermisssionsReq) Reset() {
	*x = AttachRoleWithPermisssionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachRoleWithPermisssionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachRoleWithPermisssionsReq) ProtoMessage() {}

func (x *AttachRoleWithPermisssionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachRoleWithPermisssionsReq.ProtoReflect.Descriptor instead.
func (*AttachRoleWithPermisssionsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{6}
}

func (x *AttachRoleWithPermisssionsReq) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *AttachRoleWithPermisssionsReq) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *AttachRoleWithPermisssionsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetAttachedRoleswithPermissionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *GetAttachedRoleswithPermissionsReq) Reset() {
	*x = GetAttachedRoleswithPermissionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedRoleswithPermissionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedRoleswithPermissionsReq) ProtoMessage() {}

func (x *GetAttachedRoleswithPermissionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedRoleswithPermissionsReq.ProtoReflect.Descriptor instead.
func (*GetAttachedRoleswithPermissionsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{7}
}

func (x *GetAttachedRoleswithPermissionsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetAttachedRoleswithPermissionsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	RoleID       uint32 `protobuf:"varint,2,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	Role         string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
	PermissionID uint32 `protobuf:"varint,4,opt,name=PermissionID,proto3" json:"PermissionID,omitempty"`
	Permission   string `protobuf:"bytes,5,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *GetAttachedRoleswithPermissionsRes) Reset() {
	*x = GetAttachedRoleswithPermissionsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedRoleswithPermissionsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedRoleswithPermissionsRes) ProtoMessage() {}

func (x *GetAttachedRoleswithPermissionsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedRoleswithPermissionsRes.ProtoReflect.Descriptor instead.
func (*GetAttachedRoleswithPermissionsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{8}
}

func (x *GetAttachedRoleswithPermissionsRes) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GetAttachedRoleswithPermissionsRes) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *GetAttachedRoleswithPermissionsRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetAttachedRoleswithPermissionsRes) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *GetAttachedRoleswithPermissionsRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type AddCompanyTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *AddCompanyTypeReq) Reset() {
	*x = AddCompanyTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompanyTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompanyTypeReq) ProtoMessage() {}

func (x *AddCompanyTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompanyTypeReq.ProtoReflect.Descriptor instead.
func (*AddCompanyTypeReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{9}
}

func (x *AddCompanyTypeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *AddPermissionReq) Reset() {
	*x = AddPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPermissionReq) ProtoMessage() {}

func (x *AddPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPermissionReq.ProtoReflect.Descriptor instead.
func (*AddPermissionReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{10}
}

func (x *AddPermissionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyUsername string `protobuf:"bytes,1,opt,name=CompanyUsername,proto3" json:"CompanyUsername,omitempty"`
	CompanyID       string `protobuf:"bytes,2,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	VisitorID       string `protobuf:"bytes,3,opt,name=VisitorID,proto3" json:"VisitorID,omitempty"`
}

func (x *GetCompanyReq) Reset() {
	*x = GetCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyReq) ProtoMessage() {}

func (x *GetCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyReq.ProtoReflect.Descriptor instead.
func (*GetCompanyReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{11}
}

func (x *GetCompanyReq) GetCompanyUsername() string {
	if x != nil {
		return x.CompanyUsername
	}
	return ""
}

func (x *GetCompanyReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetCompanyReq) GetVisitorID() string {
	if x != nil {
		return x.VisitorID
	}
	return ""
}

type GetCompanyDetailsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID         string                    `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	CompanyUsername   string                    `protobuf:"bytes,2,opt,name=CompanyUsername,proto3" json:"CompanyUsername,omitempty"`
	Members           uint32                    `protobuf:"varint,3,opt,name=Members,proto3" json:"Members,omitempty"`
	MembersDetails    []*GetCompanyEmployeesRes `protobuf:"bytes,4,rep,name=MembersDetails,proto3" json:"MembersDetails,omitempty"`
	MembersTerminated uint32                    `protobuf:"varint,5,opt,name=MembersTerminated,proto3" json:"MembersTerminated,omitempty"`
	Clients           uint32                    `protobuf:"varint,6,opt,name=Clients,proto3" json:"Clients,omitempty"`
	ActiveProjects    uint32                    `protobuf:"varint,7,opt,name=ActiveProjects,proto3" json:"ActiveProjects,omitempty"`
}

func (x *GetCompanyDetailsRes) Reset() {
	*x = GetCompanyDetailsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyDetailsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyDetailsRes) ProtoMessage() {}

func (x *GetCompanyDetailsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyDetailsRes.ProtoReflect.Descriptor instead.
func (*GetCompanyDetailsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{12}
}

func (x *GetCompanyDetailsRes) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetCompanyDetailsRes) GetCompanyUsername() string {
	if x != nil {
		return x.CompanyUsername
	}
	return ""
}

func (x *GetCompanyDetailsRes) GetMembers() uint32 {
	if x != nil {
		return x.Members
	}
	return 0
}

func (x *GetCompanyDetailsRes) GetMembersDetails() []*GetCompanyEmployeesRes {
	if x != nil {
		return x.MembersDetails
	}
	return nil
}

func (x *GetCompanyDetailsRes) GetMembersTerminated() uint32 {
	if x != nil {
		return x.MembersTerminated
	}
	return 0
}

func (x *GetCompanyDetailsRes) GetClients() uint32 {
	if x != nil {
		return x.Clients
	}
	return 0
}

func (x *GetCompanyDetailsRes) GetActiveProjects() uint32 {
	if x != nil {
		return x.ActiveProjects
	}
	return 0
}

type GetCompanyEmployeesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email      string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Role       string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
	Permission string `protobuf:"bytes,4,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *GetCompanyEmployeesRes) Reset() {
	*x = GetCompanyEmployeesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyEmployeesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyEmployeesRes) ProtoMessage() {}

func (x *GetCompanyEmployeesRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyEmployeesRes.ProtoReflect.Descriptor instead.
func (*GetCompanyEmployeesRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{13}
}

func (x *GetCompanyEmployeesRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetCompanyEmployeesRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCompanyEmployeesRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetCompanyEmployeesRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type LogintoCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyUsername string `protobuf:"bytes,1,opt,name=CompanyUsername,proto3" json:"CompanyUsername,omitempty"`
	UserID          string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *LogintoCompanyReq) Reset() {
	*x = LogintoCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogintoCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogintoCompanyReq) ProtoMessage() {}

func (x *LogintoCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogintoCompanyReq.ProtoReflect.Descriptor instead.
func (*LogintoCompanyReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{14}
}

func (x *LogintoCompanyReq) GetCompanyUsername() string {
	if x != nil {
		return x.CompanyUsername
	}
	return ""
}

func (x *LogintoCompanyReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type LogintoCompanyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID  string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Permission string `protobuf:"bytes,2,opt,name=Permission,proto3" json:"Permission,omitempty"`
	Role       string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *LogintoCompanyRes) Reset() {
	*x = LogintoCompanyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogintoCompanyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogintoCompanyRes) ProtoMessage() {}

func (x *LogintoCompanyRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogintoCompanyRes.ProtoReflect.Descriptor instead.
func (*LogintoCompanyRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{15}
}

func (x *LogintoCompanyRes) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *LogintoCompanyRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *LogintoCompanyRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type SearchCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *SearchCompanyReq) Reset() {
	*x = SearchCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCompanyReq) ProtoMessage() {}

func (x *SearchCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCompanyReq.ProtoReflect.Descriptor instead.
func (*SearchCompanyReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{16}
}

func (x *SearchCompanyReq) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type MemberStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *MemberStatusReq) Reset() {
	*x = MemberStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStatusReq) ProtoMessage() {}

func (x *MemberStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStatusReq.ProtoReflect.Descriptor instead.
func (*MemberStatusReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{17}
}

func (x *MemberStatusReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SalaryIncrementofEmployeeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID  string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	EmployeeID string `protobuf:"bytes,2,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
	Increment  uint32 `protobuf:"varint,3,opt,name=Increment,proto3" json:"Increment,omitempty"`
}

func (x *SalaryIncrementofEmployeeReq) Reset() {
	*x = SalaryIncrementofEmployeeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalaryIncrementofEmployeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalaryIncrementofEmployeeReq) ProtoMessage() {}

func (x *SalaryIncrementofEmployeeReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalaryIncrementofEmployeeReq.ProtoReflect.Descriptor instead.
func (*SalaryIncrementofEmployeeReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{18}
}

func (x *SalaryIncrementofEmployeeReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *SalaryIncrementofEmployeeReq) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

func (x *SalaryIncrementofEmployeeReq) GetIncrement() uint32 {
	if x != nil {
		return x.Increment
	}
	return 0
}

type SalaryIncrementofRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	RoleID    uint32 `protobuf:"varint,2,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	Increment uint32 `protobuf:"varint,3,opt,name=Increment,proto3" json:"Increment,omitempty"`
}

func (x *SalaryIncrementofRoleReq) Reset() {
	*x = SalaryIncrementofRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalaryIncrementofRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalaryIncrementofRoleReq) ProtoMessage() {}

func (x *SalaryIncrementofRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalaryIncrementofRoleReq.ProtoReflect.Descriptor instead.
func (*SalaryIncrementofRoleReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{19}
}

func (x *SalaryIncrementofRoleReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *SalaryIncrementofRoleReq) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *SalaryIncrementofRoleReq) GetIncrement() uint32 {
	if x != nil {
		return x.Increment
	}
	return 0
}

type GetAverageSalaryperRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetAverageSalaryperRoleReq) Reset() {
	*x = GetAverageSalaryperRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAverageSalaryperRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAverageSalaryperRoleReq) ProtoMessage() {}

func (x *GetAverageSalaryperRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAverageSalaryperRoleReq.ProtoReflect.Descriptor instead.
func (*GetAverageSalaryperRoleReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{20}
}

func (x *GetAverageSalaryperRoleReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetAverageSalaryperRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   string `protobuf:"bytes,1,opt,name=Role,proto3" json:"Role,omitempty"`
	Salary uint32 `protobuf:"varint,2,opt,name=Salary,proto3" json:"Salary,omitempty"`
}

func (x *GetAverageSalaryperRoleRes) Reset() {
	*x = GetAverageSalaryperRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAverageSalaryperRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAverageSalaryperRoleRes) ProtoMessage() {}

func (x *GetAverageSalaryperRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAverageSalaryperRoleRes.ProtoReflect.Descriptor instead.
func (*GetAverageSalaryperRoleRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{21}
}

func (x *GetAverageSalaryperRoleRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetAverageSalaryperRoleRes) GetSalary() uint32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

type GetSalaryLeaderboardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetSalaryLeaderboardReq) Reset() {
	*x = GetSalaryLeaderboardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalaryLeaderboardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalaryLeaderboardReq) ProtoMessage() {}

func (x *GetSalaryLeaderboardReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalaryLeaderboardReq.ProtoReflect.Descriptor instead.
func (*GetSalaryLeaderboardReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{22}
}

func (x *GetSalaryLeaderboardReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetSalaryLeaderboardRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeID string `protobuf:"bytes,1,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
	Email      string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Salary     uint32 `protobuf:"varint,4,opt,name=Salary,proto3" json:"Salary,omitempty"`
	Role       string `protobuf:"bytes,5,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *GetSalaryLeaderboardRes) Reset() {
	*x = GetSalaryLeaderboardRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalaryLeaderboardRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalaryLeaderboardRes) ProtoMessage() {}

func (x *GetSalaryLeaderboardRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalaryLeaderboardRes.ProtoReflect.Descriptor instead.
func (*GetSalaryLeaderboardRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{23}
}

func (x *GetSalaryLeaderboardRes) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

func (x *GetSalaryLeaderboardRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetSalaryLeaderboardRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSalaryLeaderboardRes) GetSalary() uint32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetSalaryLeaderboardRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type RaiseProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem   string `protobuf:"bytes,1,opt,name=Problem,proto3" json:"Problem,omitempty"`
	UserID    string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CompanyID string `protobuf:"bytes,3,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *RaiseProblemReq) Reset() {
	*x = RaiseProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaiseProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaiseProblemReq) ProtoMessage() {}

func (x *RaiseProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaiseProblemReq.ProtoReflect.Descriptor instead.
func (*RaiseProblemReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{24}
}

func (x *RaiseProblemReq) GetProblem() string {
	if x != nil {
		return x.Problem
	}
	return ""
}

func (x *RaiseProblemReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RaiseProblemReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetProblemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetProblemsReq) Reset() {
	*x = GetProblemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemsReq) ProtoMessage() {}

func (x *GetProblemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemsReq.ProtoReflect.Descriptor instead.
func (*GetProblemsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{25}
}

func (x *GetProblemsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetProblemsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem  string `protobuf:"bytes,1,opt,name=Problem,proto3" json:"Problem,omitempty"`
	RaisedBy string `protobuf:"bytes,2,opt,name=RaisedBy,proto3" json:"RaisedBy,omitempty"`
}

func (x *GetProblemsRes) Reset() {
	*x = GetProblemsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemsRes) ProtoMessage() {}

func (x *GetProblemsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemsRes.ProtoReflect.Descriptor instead.
func (*GetProblemsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{26}
}

func (x *GetProblemsRes) GetProblem() string {
	if x != nil {
		return x.Problem
	}
	return ""
}

func (x *GetProblemsRes) GetRaisedBy() string {
	if x != nil {
		return x.RaisedBy
	}
	return ""
}

type GetProfileViewsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string               `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	From      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
}

func (x *GetProfileViewsReq) Reset() {
	*x = GetProfileViewsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileViewsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileViewsReq) ProtoMessage() {}

func (x *GetProfileViewsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileViewsReq.ProtoReflect.Descriptor instead.
func (*GetProfileViewsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{27}
}

func (x *GetProfileViewsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetProfileViewsReq) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetProfileViewsReq) GetTo() *timestamp.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetProfileViewsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Views     uint32 `protobuf:"varint,2,opt,name=Views,proto3" json:"Views,omitempty"`
}

func (x *GetProfileViewsRes) Reset() {
	*x = GetProfileViewsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileViewsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileViewsRes) ProtoMessage() {}

func (x *GetProfileViewsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileViewsRes.ProtoReflect.Descriptor instead.
func (*GetProfileViewsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{28}
}

func (x *GetProfileViewsRes) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetProfileViewsRes) GetViews() uint32 {
	if x != nil {
		return x.Views
	}
	return 0
}

type GetVisitorsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string               `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	From      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
}

func (x *GetVisitorsReq) Reset() {
	*x = GetVisitorsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisitorsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisitorsReq) ProtoMessage() {}

func (x *GetVisitorsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisitorsReq.ProtoReflect.Descriptor instead.
func (*GetVisitorsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{29}
}

func (x *GetVisitorsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetVisitorsReq) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetVisitorsReq) GetTo() *timestamp.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetVisitorsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string               `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email       string               `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	VisitedTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=VisitedTime,proto3" json:"VisitedTime,omitempty"`
}

func (x *GetVisitorsRes) Reset() {
	*x = GetVisitorsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisitorsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisitorsRes) ProtoMessage() {}

func (x *GetVisitorsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisitorsRes.ProtoReflect.Descriptor instead.
func (*GetVisitorsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{30}
}

func (x *GetVisitorsRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVisitorsRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetVisitorsRes) GetVisitedTime() *timestamp.Timestamp {
	if x != nil {
		return x.VisitedTime
	}
	return nil
}

type GetPermisssionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetPermisssionReq) Reset() {
	*x = GetPermisssionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermisssionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermisssionReq) ProtoMessage() {}

func (x *GetPermisssionReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermisssionReq.ProtoReflect.Descriptor instead.
func (*GetPermisssionReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{31}
}

func (x *GetPermisssionReq) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetPermisssionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission string `protobuf:"bytes,1,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *GetPermisssionRes) Reset() {
	*x = GetPermisssionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermisssionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermisssionRes) ProtoMessage() {}

func (x *GetPermisssionRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermisssionRes.ProtoReflect.Descriptor instead.
func (*GetPermisssionRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{32}
}

func (x *GetPermisssionRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type IsEmployeeExistsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID  string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	EmployeeID string `protobuf:"bytes,2,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
}

func (x *IsEmployeeExistsReq) Reset() {
	*x = IsEmployeeExistsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsEmployeeExistsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEmployeeExistsReq) ProtoMessage() {}

func (x *IsEmployeeExistsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEmployeeExistsReq.ProtoReflect.Descriptor instead.
func (*IsEmployeeExistsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{33}
}

func (x *IsEmployeeExistsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *IsEmployeeExistsReq) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

type IsEmployeeExistsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *IsEmployeeExistsRes) Reset() {
	*x = IsEmployeeExistsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsEmployeeExistsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEmployeeExistsRes) ProtoMessage() {}

func (x *IsEmployeeExistsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEmployeeExistsRes.ProtoReflect.Descriptor instead.
func (*IsEmployeeExistsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{34}
}

func (x *IsEmployeeExistsRes) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

var File_company_proto protoreflect.FileDescriptor

var file_company_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x69, 0x6e, 0x4e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x69, 0x6e, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe6, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x38, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0f, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x54, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x43, 0x54, 0x43, 0x22, 0x79, 0x0a, 0x1d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52,
	0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x22, 0x42, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x77, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x22, 0xa4, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x77, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x22, 0xb1, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x47,
	0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x52, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x76, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x55, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x65, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74,
	0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x22, 0x0a,
	0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x29, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7a, 0x0a, 0x1c,
	0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f,
	0x66, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6e, 0x0a, 0x18, 0x53, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x66, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x22, 0x37,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x61, 0x0a, 0x0f, 0x52, 0x61, 0x69,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x69, 0x73,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x69, 0x73,
	0x65, 0x64, 0x42, 0x79, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x54, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x02, 0x54, 0x6f, 0x22, 0x48, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x69, 0x65,
	0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x56, 0x69, 0x65, 0x77, 0x73, 0x22,
	0x8a, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x12, 0x2e, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x2a, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x54, 0x6f, 0x22, 0x78, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3c, 0x0a, 0x0b, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x56, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x53, 0x0a, 0x13, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x13, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x32, 0xe0, 0x0d, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12,
	0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x30, 0x01,
	0x12, 0x3f, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73,
	0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x5c, 0x0a, 0x1a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x7d, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x77, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x77, 0x69, 0x74,
	0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x77, 0x69, 0x74, 0x68, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x45,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41,
	0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x43, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x19, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x66, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x66, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x52, 0x0a, 0x15, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x6f, 0x66, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x6f, 0x66, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x65, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x70,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x40, 0x0a, 0x0c, 0x52, 0x61, 0x69,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x52, 0x61, 0x69, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x4b,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x47,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x10, 0x49, 0x73, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x70, 0x62, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_company_proto_rawDescOnce sync.Once
	file_company_proto_rawDescData = file_company_proto_rawDesc
)

func file_company_proto_rawDescGZIP() []byte {
	file_company_proto_rawDescOnce.Do(func() {
		file_company_proto_rawDescData = protoimpl.X.CompressGZIP(file_company_proto_rawDescData)
	})
	return file_company_proto_rawDescData
}

var file_company_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_company_proto_goTypes = []interface{}{
	(*Address)(nil),                            // 0: company.Address
	(*RegisterCompanyRequest)(nil),             // 1: company.RegisterCompanyRequest
	(*GetCompanyTypesRes)(nil),                 // 2: company.GetCompanyTypesRes
	(*CompanyResponce)(nil),                    // 3: company.CompanyResponce
	(*Permission)(nil),                         // 4: company.Permission
	(*AddEmployeeReq)(nil),                     // 5: company.AddEmployeeReq
	(*AttachRoleWithPermisssionsReq)(nil),      // 6: company.AttachRoleWithPermisssionsReq
	(*GetAttachedRoleswithPermissionsReq)(nil), // 7: company.GetAttachedRoleswithPermissionsReq
	(*GetAttachedRoleswithPermissionsRes)(nil), // 8: company.GetAttachedRoleswithPermissionsRes
	(*AddCompanyTypeReq)(nil),                  // 9: company.AddCompanyTypeReq
	(*AddPermissionReq)(nil),                   // 10: company.AddPermissionReq
	(*GetCompanyReq)(nil),                      // 11: company.GetCompanyReq
	(*GetCompanyDetailsRes)(nil),               // 12: company.GetCompanyDetailsRes
	(*GetCompanyEmployeesRes)(nil),             // 13: company.GetCompanyEmployeesRes
	(*LogintoCompanyReq)(nil),                  // 14: company.LogintoCompanyReq
	(*LogintoCompanyRes)(nil),                  // 15: company.LogintoCompanyRes
	(*SearchCompanyReq)(nil),                   // 16: company.SearchCompanyReq
	(*MemberStatusReq)(nil),                    // 17: company.MemberStatusReq
	(*SalaryIncrementofEmployeeReq)(nil),       // 18: company.SalaryIncrementofEmployeeReq
	(*SalaryIncrementofRoleReq)(nil),           // 19: company.SalaryIncrementofRoleReq
	(*GetAverageSalaryperRoleReq)(nil),         // 20: company.GetAverageSalaryperRoleReq
	(*GetAverageSalaryperRoleRes)(nil),         // 21: company.GetAverageSalaryperRoleRes
	(*GetSalaryLeaderboardReq)(nil),            // 22: company.GetSalaryLeaderboardReq
	(*GetSalaryLeaderboardRes)(nil),            // 23: company.GetSalaryLeaderboardRes
	(*RaiseProblemReq)(nil),                    // 24: company.RaiseProblemReq
	(*GetProblemsReq)(nil),                     // 25: company.GetProblemsReq
	(*GetProblemsRes)(nil),                     // 26: company.GetProblemsRes
	(*GetProfileViewsReq)(nil),                 // 27: company.GetProfileViewsReq
	(*GetProfileViewsRes)(nil),                 // 28: company.GetProfileViewsRes
	(*GetVisitorsReq)(nil),                     // 29: company.GetVisitorsReq
	(*GetVisitorsRes)(nil),                     // 30: company.GetVisitorsRes
	(*GetPermisssionReq)(nil),                  // 31: company.GetPermisssionReq
	(*GetPermisssionRes)(nil),                  // 32: company.GetPermisssionRes
	(*IsEmployeeExistsReq)(nil),                // 33: company.IsEmployeeExistsReq
	(*IsEmployeeExistsRes)(nil),                // 34: company.IsEmployeeExistsRes
	(*timestamp.Timestamp)(nil),                // 35: google.protobuf.Timestamp
	(*empty.Empty)(nil),                        // 36: google.protobuf.Empty
}
var file_company_proto_depIdxs = []int32{
	0,  // 0: company.RegisterCompanyRequest.Address:type_name -> company.Address
	0,  // 1: company.CompanyResponce.Address:type_name -> company.Address
	13, // 2: company.GetCompanyDetailsRes.MembersDetails:type_name -> company.GetCompanyEmployeesRes
	35, // 3: company.GetProfileViewsReq.From:type_name -> google.protobuf.Timestamp
	35, // 4: company.GetProfileViewsReq.To:type_name -> google.protobuf.Timestamp
	35, // 5: company.GetVisitorsReq.From:type_name -> google.protobuf.Timestamp
	35, // 6: company.GetVisitorsReq.To:type_name -> google.protobuf.Timestamp
	35, // 7: company.GetVisitorsRes.VisitedTime:type_name -> google.protobuf.Timestamp
	1,  // 8: company.CompanyService.RegisterCompany:input_type -> company.RegisterCompanyRequest
	36, // 9: company.CompanyService.GetCompanyTypes:input_type -> google.protobuf.Empty
	36, // 10: company.CompanyService.GetPermissions:input_type -> google.protobuf.Empty
	5,  // 11: company.CompanyService.AddEmployees:input_type -> company.AddEmployeeReq
	6,  // 12: company.CompanyService.AttachRoleWithPermisssions:input_type -> company.AttachRoleWithPermisssionsReq
	7,  // 13: company.CompanyService.GetAttachedRoleswithPermissions:input_type -> company.GetAttachedRoleswithPermissionsReq
	9,  // 14: company.CompanyService.AddCompanyTypes:input_type -> company.AddCompanyTypeReq
	10, // 15: company.CompanyService.Permissions:input_type -> company.AddPermissionReq
	11, // 16: company.CompanyService.GetCompanyDetails:input_type -> company.GetCompanyReq
	11, // 17: company.CompanyService.GetCompanyEmployees:input_type -> company.GetCompanyReq
	14, // 18: company.CompanyService.LogintoCompany:input_type -> company.LogintoCompanyReq
	17, // 19: company.CompanyService.AddMemberStatus:input_type -> company.MemberStatusReq
	18, // 20: company.CompanyService.SalaryIncrementofEmployee:input_type -> company.SalaryIncrementofEmployeeReq
	19, // 21: company.CompanyService.SalaryIncrementofRole:input_type -> company.SalaryIncrementofRoleReq
	20, // 22: company.CompanyService.GetAverageSalaryperRole:input_type -> company.GetAverageSalaryperRoleReq
	22, // 23: company.CompanyService.GetSalaryLeaderboard:input_type -> company.GetSalaryLeaderboardReq
	24, // 24: company.CompanyService.RaiseProblem:input_type -> company.RaiseProblemReq
	25, // 25: company.CompanyService.GetProblems:input_type -> company.GetProblemsReq
	27, // 26: company.CompanyService.GetProfileViews:input_type -> company.GetProfileViewsReq
	29, // 27: company.CompanyService.GetVisitors:input_type -> company.GetVisitorsReq
	31, // 28: company.CompanyService.GetPermission:input_type -> company.GetPermisssionReq
	33, // 29: company.CompanyService.IsEmployeeExists:input_type -> company.IsEmployeeExistsReq
	3,  // 30: company.CompanyService.RegisterCompany:output_type -> company.CompanyResponce
	2,  // 31: company.CompanyService.GetCompanyTypes:output_type -> company.GetCompanyTypesRes
	4,  // 32: company.CompanyService.GetPermissions:output_type -> company.Permission
	36, // 33: company.CompanyService.AddEmployees:output_type -> google.protobuf.Empty
	36, // 34: company.CompanyService.AttachRoleWithPermisssions:output_type -> google.protobuf.Empty
	8,  // 35: company.CompanyService.GetAttachedRoleswithPermissions:output_type -> company.GetAttachedRoleswithPermissionsRes
	36, // 36: company.CompanyService.AddCompanyTypes:output_type -> google.protobuf.Empty
	36, // 37: company.CompanyService.Permissions:output_type -> google.protobuf.Empty
	12, // 38: company.CompanyService.GetCompanyDetails:output_type -> company.GetCompanyDetailsRes
	13, // 39: company.CompanyService.GetCompanyEmployees:output_type -> company.GetCompanyEmployeesRes
	15, // 40: company.CompanyService.LogintoCompany:output_type -> company.LogintoCompanyRes
	36, // 41: company.CompanyService.AddMemberStatus:output_type -> google.protobuf.Empty
	36, // 42: company.CompanyService.SalaryIncrementofEmployee:output_type -> google.protobuf.Empty
	36, // 43: company.CompanyService.SalaryIncrementofRole:output_type -> google.protobuf.Empty
	21, // 44: company.CompanyService.GetAverageSalaryperRole:output_type -> company.GetAverageSalaryperRoleRes
	23, // 45: company.CompanyService.GetSalaryLeaderboard:output_type -> company.GetSalaryLeaderboardRes
	36, // 46: company.CompanyService.RaiseProblem:output_type -> google.protobuf.Empty
	26, // 47: company.CompanyService.GetProblems:output_type -> company.GetProblemsRes
	28, // 48: company.CompanyService.GetProfileViews:output_type -> company.GetProfileViewsRes
	30, // 49: company.CompanyService.GetVisitors:output_type -> company.GetVisitorsRes
	32, // 50: company.CompanyService.GetPermission:output_type -> company.GetPermisssionRes
	34, // 51: company.CompanyService.IsEmployeeExists:output_type -> company.IsEmployeeExistsRes
	30, // [30:52] is the sub-list for method output_type
	8,  // [8:30] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_company_proto_init() }
func file_company_proto_init() {
	if File_company_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_company_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyTypesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyResponce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEmployeeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachRoleWithPermisssionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedRoleswithPermissionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedRoleswithPermissionsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompanyTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyDetailsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyEmployeesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogintoCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogintoCompanyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalaryIncrementofEmployeeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalaryIncrementofRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAverageSalaryperRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAverageSalaryperRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalaryLeaderboardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalaryLeaderboardRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaiseProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProblemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProblemsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileViewsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileViewsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisitorsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisitorsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermisssionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermisssionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsEmployeeExistsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsEmployeeExistsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_company_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_company_proto_goTypes,
		DependencyIndexes: file_company_proto_depIdxs,
		MessageInfos:      file_company_proto_msgTypes,
	}.Build()
	File_company_proto = out.File
	file_company_proto_rawDesc = nil
	file_company_proto_goTypes = nil
	file_company_proto_depIdxs = nil
}
