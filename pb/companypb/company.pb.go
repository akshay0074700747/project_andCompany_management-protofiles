// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: company.proto

package companypb

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Street   string `protobuf:"bytes,1,opt,name=Street,proto3" json:"Street,omitempty"`
	StreetNo int32  `protobuf:"varint,2,opt,name=StreetNo,proto3" json:"StreetNo,omitempty"`
	PinNo    int32  `protobuf:"varint,3,opt,name=PinNo,proto3" json:"PinNo,omitempty"`
	District string `protobuf:"bytes,4,opt,name=District,proto3" json:"District,omitempty"`
	State    string `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	Nation   string `protobuf:"bytes,6,opt,name=Nation,proto3" json:"Nation,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{0}
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetStreetNo() int32 {
	if x != nil {
		return x.StreetNo
	}
	return 0
}

func (x *Address) GetPinNo() int32 {
	if x != nil {
		return x.PinNo
	}
	return 0
}

func (x *Address) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

type RegisterCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Address         *Address `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Emails          []string `protobuf:"bytes,3,rep,name=Emails,proto3" json:"Emails,omitempty"`
	Mobiles         []string `protobuf:"bytes,4,rep,name=Mobiles,proto3" json:"Mobiles,omitempty"`
	Companyusername string   `protobuf:"bytes,5,opt,name=Companyusername,proto3" json:"Companyusername,omitempty"`
	TypeID          uint32   `protobuf:"varint,6,opt,name=TypeID,proto3" json:"TypeID,omitempty"`
	OwnerID         string   `protobuf:"bytes,7,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
}

func (x *RegisterCompanyRequest) Reset() {
	*x = RegisterCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCompanyRequest) ProtoMessage() {}

func (x *RegisterCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterCompanyRequest.ProtoReflect.Descriptor instead.
func (*RegisterCompanyRequest) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterCompanyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterCompanyRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RegisterCompanyRequest) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *RegisterCompanyRequest) GetMobiles() []string {
	if x != nil {
		return x.Mobiles
	}
	return nil
}

func (x *RegisterCompanyRequest) GetCompanyusername() string {
	if x != nil {
		return x.Companyusername
	}
	return ""
}

func (x *RegisterCompanyRequest) GetTypeID() uint32 {
	if x != nil {
		return x.TypeID
	}
	return 0
}

func (x *RegisterCompanyRequest) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

type GetCompanyTypesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *GetCompanyTypesRes) Reset() {
	*x = GetCompanyTypesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyTypesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyTypesRes) ProtoMessage() {}

func (x *GetCompanyTypesRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyTypesRes.ProtoReflect.Descriptor instead.
func (*GetCompanyTypesRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{2}
}

func (x *GetCompanyTypesRes) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GetCompanyTypesRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CompanyResponce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Address         *Address `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Emails          []string `protobuf:"bytes,3,rep,name=Emails,proto3" json:"Emails,omitempty"`
	Mobiles         []string `protobuf:"bytes,4,rep,name=Mobiles,proto3" json:"Mobiles,omitempty"`
	Companyusername string   `protobuf:"bytes,5,opt,name=Companyusername,proto3" json:"Companyusername,omitempty"`
	CompanyID       string   `protobuf:"bytes,6,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *CompanyResponce) Reset() {
	*x = CompanyResponce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyResponce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyResponce) ProtoMessage() {}

func (x *CompanyResponce) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyResponce.ProtoReflect.Descriptor instead.
func (*CompanyResponce) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{3}
}

func (x *CompanyResponce) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyResponce) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CompanyResponce) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *CompanyResponce) GetMobiles() []string {
	if x != nil {
		return x.Mobiles
	}
	return nil
}

func (x *CompanyResponce) GetCompanyusername() string {
	if x != nil {
		return x.Companyusername
	}
	return ""
}

func (x *CompanyResponce) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Permission string `protobuf:"bytes,2,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{4}
}

func (x *Permission) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Permission) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type AddEmployeeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	RoleID    uint32 `protobuf:"varint,2,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	CompanyID string `protobuf:"bytes,3,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	CTC       uint32 `protobuf:"varint,4,opt,name=CTC,proto3" json:"CTC,omitempty"`
}

func (x *AddEmployeeReq) Reset() {
	*x = AddEmployeeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEmployeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmployeeReq) ProtoMessage() {}

func (x *AddEmployeeReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmployeeReq.ProtoReflect.Descriptor instead.
func (*AddEmployeeReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{5}
}

func (x *AddEmployeeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddEmployeeReq) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *AddEmployeeReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *AddEmployeeReq) GetCTC() uint32 {
	if x != nil {
		return x.CTC
	}
	return 0
}

type AttachRoleWithPermisssionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID       uint32 `protobuf:"varint,1,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	PermissionID uint32 `protobuf:"varint,2,opt,name=PermissionID,proto3" json:"PermissionID,omitempty"`
	CompanyID    string `protobuf:"bytes,3,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *AttachRoleWithPermisssionsReq) Reset() {
	*x = AttachRoleWithPermisssionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachRoleWithPermisssionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachRoleWithPermisssionsReq) ProtoMessage() {}

func (x *AttachRoleWithPermisssionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachRoleWithPermisssionsReq.ProtoReflect.Descriptor instead.
func (*AttachRoleWithPermisssionsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{6}
}

func (x *AttachRoleWithPermisssionsReq) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *AttachRoleWithPermisssionsReq) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *AttachRoleWithPermisssionsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetAttachedRoleswithPermissionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *GetAttachedRoleswithPermissionsReq) Reset() {
	*x = GetAttachedRoleswithPermissionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedRoleswithPermissionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedRoleswithPermissionsReq) ProtoMessage() {}

func (x *GetAttachedRoleswithPermissionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedRoleswithPermissionsReq.ProtoReflect.Descriptor instead.
func (*GetAttachedRoleswithPermissionsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{7}
}

func (x *GetAttachedRoleswithPermissionsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetAttachedRoleswithPermissionsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	RoleID       uint32 `protobuf:"varint,2,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	Role         string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
	PermissionID uint32 `protobuf:"varint,4,opt,name=PermissionID,proto3" json:"PermissionID,omitempty"`
	Permission   string `protobuf:"bytes,5,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *GetAttachedRoleswithPermissionsRes) Reset() {
	*x = GetAttachedRoleswithPermissionsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachedRoleswithPermissionsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachedRoleswithPermissionsRes) ProtoMessage() {}

func (x *GetAttachedRoleswithPermissionsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachedRoleswithPermissionsRes.ProtoReflect.Descriptor instead.
func (*GetAttachedRoleswithPermissionsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{8}
}

func (x *GetAttachedRoleswithPermissionsRes) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GetAttachedRoleswithPermissionsRes) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *GetAttachedRoleswithPermissionsRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetAttachedRoleswithPermissionsRes) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *GetAttachedRoleswithPermissionsRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type AddCompanyTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *AddCompanyTypeReq) Reset() {
	*x = AddCompanyTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCompanyTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCompanyTypeReq) ProtoMessage() {}

func (x *AddCompanyTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCompanyTypeReq.ProtoReflect.Descriptor instead.
func (*AddCompanyTypeReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{9}
}

func (x *AddCompanyTypeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *AddPermissionReq) Reset() {
	*x = AddPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPermissionReq) ProtoMessage() {}

func (x *AddPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPermissionReq.ProtoReflect.Descriptor instead.
func (*AddPermissionReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{10}
}

func (x *AddPermissionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyUsername string `protobuf:"bytes,1,opt,name=CompanyUsername,proto3" json:"CompanyUsername,omitempty"`
	CompanyID       string `protobuf:"bytes,2,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	VisitorID       string `protobuf:"bytes,3,opt,name=VisitorID,proto3" json:"VisitorID,omitempty"`
}

func (x *GetCompanyReq) Reset() {
	*x = GetCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyReq) ProtoMessage() {}

func (x *GetCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyReq.ProtoReflect.Descriptor instead.
func (*GetCompanyReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{11}
}

func (x *GetCompanyReq) GetCompanyUsername() string {
	if x != nil {
		return x.CompanyUsername
	}
	return ""
}

func (x *GetCompanyReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetCompanyReq) GetVisitorID() string {
	if x != nil {
		return x.VisitorID
	}
	return ""
}

type GetCompanyDetailsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID         string                    `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	CompanyUsername   string                    `protobuf:"bytes,2,opt,name=CompanyUsername,proto3" json:"CompanyUsername,omitempty"`
	Members           uint32                    `protobuf:"varint,3,opt,name=Members,proto3" json:"Members,omitempty"`
	MembersDetails    []*GetCompanyEmployeesRes `protobuf:"bytes,4,rep,name=MembersDetails,proto3" json:"MembersDetails,omitempty"`
	MembersTerminated uint32                    `protobuf:"varint,5,opt,name=MembersTerminated,proto3" json:"MembersTerminated,omitempty"`
	Clients           uint32                    `protobuf:"varint,6,opt,name=Clients,proto3" json:"Clients,omitempty"`
	ActiveProjects    uint32                    `protobuf:"varint,7,opt,name=ActiveProjects,proto3" json:"ActiveProjects,omitempty"`
}

func (x *GetCompanyDetailsRes) Reset() {
	*x = GetCompanyDetailsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyDetailsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyDetailsRes) ProtoMessage() {}

func (x *GetCompanyDetailsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyDetailsRes.ProtoReflect.Descriptor instead.
func (*GetCompanyDetailsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{12}
}

func (x *GetCompanyDetailsRes) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetCompanyDetailsRes) GetCompanyUsername() string {
	if x != nil {
		return x.CompanyUsername
	}
	return ""
}

func (x *GetCompanyDetailsRes) GetMembers() uint32 {
	if x != nil {
		return x.Members
	}
	return 0
}

func (x *GetCompanyDetailsRes) GetMembersDetails() []*GetCompanyEmployeesRes {
	if x != nil {
		return x.MembersDetails
	}
	return nil
}

func (x *GetCompanyDetailsRes) GetMembersTerminated() uint32 {
	if x != nil {
		return x.MembersTerminated
	}
	return 0
}

func (x *GetCompanyDetailsRes) GetClients() uint32 {
	if x != nil {
		return x.Clients
	}
	return 0
}

func (x *GetCompanyDetailsRes) GetActiveProjects() uint32 {
	if x != nil {
		return x.ActiveProjects
	}
	return 0
}

type GetCompanyEmployeesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Email      string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Role       string `protobuf:"bytes,4,opt,name=Role,proto3" json:"Role,omitempty"`
	Permission string `protobuf:"bytes,5,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *GetCompanyEmployeesRes) Reset() {
	*x = GetCompanyEmployeesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyEmployeesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyEmployeesRes) ProtoMessage() {}

func (x *GetCompanyEmployeesRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyEmployeesRes.ProtoReflect.Descriptor instead.
func (*GetCompanyEmployeesRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{13}
}

func (x *GetCompanyEmployeesRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCompanyEmployeesRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetCompanyEmployeesRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCompanyEmployeesRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetCompanyEmployeesRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type LogintoCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyUsername string `protobuf:"bytes,1,opt,name=CompanyUsername,proto3" json:"CompanyUsername,omitempty"`
	UserID          string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *LogintoCompanyReq) Reset() {
	*x = LogintoCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogintoCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogintoCompanyReq) ProtoMessage() {}

func (x *LogintoCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogintoCompanyReq.ProtoReflect.Descriptor instead.
func (*LogintoCompanyReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{14}
}

func (x *LogintoCompanyReq) GetCompanyUsername() string {
	if x != nil {
		return x.CompanyUsername
	}
	return ""
}

func (x *LogintoCompanyReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type LogintoCompanyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID  string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Permission string `protobuf:"bytes,2,opt,name=Permission,proto3" json:"Permission,omitempty"`
	Role       string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *LogintoCompanyRes) Reset() {
	*x = LogintoCompanyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogintoCompanyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogintoCompanyRes) ProtoMessage() {}

func (x *LogintoCompanyRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogintoCompanyRes.ProtoReflect.Descriptor instead.
func (*LogintoCompanyRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{15}
}

func (x *LogintoCompanyRes) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *LogintoCompanyRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *LogintoCompanyRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type SearchCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *SearchCompanyReq) Reset() {
	*x = SearchCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCompanyReq) ProtoMessage() {}

func (x *SearchCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCompanyReq.ProtoReflect.Descriptor instead.
func (*SearchCompanyReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{16}
}

func (x *SearchCompanyReq) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type MemberStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *MemberStatusReq) Reset() {
	*x = MemberStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStatusReq) ProtoMessage() {}

func (x *MemberStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStatusReq.ProtoReflect.Descriptor instead.
func (*MemberStatusReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{17}
}

func (x *MemberStatusReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SalaryIncrementofEmployeeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID  string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	EmployeeID string `protobuf:"bytes,2,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
	Increment  uint32 `protobuf:"varint,3,opt,name=Increment,proto3" json:"Increment,omitempty"`
}

func (x *SalaryIncrementofEmployeeReq) Reset() {
	*x = SalaryIncrementofEmployeeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalaryIncrementofEmployeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalaryIncrementofEmployeeReq) ProtoMessage() {}

func (x *SalaryIncrementofEmployeeReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalaryIncrementofEmployeeReq.ProtoReflect.Descriptor instead.
func (*SalaryIncrementofEmployeeReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{18}
}

func (x *SalaryIncrementofEmployeeReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *SalaryIncrementofEmployeeReq) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

func (x *SalaryIncrementofEmployeeReq) GetIncrement() uint32 {
	if x != nil {
		return x.Increment
	}
	return 0
}

type SalaryIncrementofRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	RoleID    uint32 `protobuf:"varint,2,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	Increment uint32 `protobuf:"varint,3,opt,name=Increment,proto3" json:"Increment,omitempty"`
}

func (x *SalaryIncrementofRoleReq) Reset() {
	*x = SalaryIncrementofRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalaryIncrementofRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalaryIncrementofRoleReq) ProtoMessage() {}

func (x *SalaryIncrementofRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalaryIncrementofRoleReq.ProtoReflect.Descriptor instead.
func (*SalaryIncrementofRoleReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{19}
}

func (x *SalaryIncrementofRoleReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *SalaryIncrementofRoleReq) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *SalaryIncrementofRoleReq) GetIncrement() uint32 {
	if x != nil {
		return x.Increment
	}
	return 0
}

type GetAverageSalaryperRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetAverageSalaryperRoleReq) Reset() {
	*x = GetAverageSalaryperRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAverageSalaryperRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAverageSalaryperRoleReq) ProtoMessage() {}

func (x *GetAverageSalaryperRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAverageSalaryperRoleReq.ProtoReflect.Descriptor instead.
func (*GetAverageSalaryperRoleReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{20}
}

func (x *GetAverageSalaryperRoleReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetAverageSalaryperRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   string `protobuf:"bytes,1,opt,name=Role,proto3" json:"Role,omitempty"`
	Salary uint32 `protobuf:"varint,2,opt,name=Salary,proto3" json:"Salary,omitempty"`
}

func (x *GetAverageSalaryperRoleRes) Reset() {
	*x = GetAverageSalaryperRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAverageSalaryperRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAverageSalaryperRoleRes) ProtoMessage() {}

func (x *GetAverageSalaryperRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAverageSalaryperRoleRes.ProtoReflect.Descriptor instead.
func (*GetAverageSalaryperRoleRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{21}
}

func (x *GetAverageSalaryperRoleRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetAverageSalaryperRoleRes) GetSalary() uint32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

type GetSalaryLeaderboardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetSalaryLeaderboardReq) Reset() {
	*x = GetSalaryLeaderboardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalaryLeaderboardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalaryLeaderboardReq) ProtoMessage() {}

func (x *GetSalaryLeaderboardReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalaryLeaderboardReq.ProtoReflect.Descriptor instead.
func (*GetSalaryLeaderboardReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{22}
}

func (x *GetSalaryLeaderboardReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetSalaryLeaderboardRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeID string `protobuf:"bytes,1,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
	Email      string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Salary     uint32 `protobuf:"varint,4,opt,name=Salary,proto3" json:"Salary,omitempty"`
	Role       string `protobuf:"bytes,5,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *GetSalaryLeaderboardRes) Reset() {
	*x = GetSalaryLeaderboardRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalaryLeaderboardRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalaryLeaderboardRes) ProtoMessage() {}

func (x *GetSalaryLeaderboardRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalaryLeaderboardRes.ProtoReflect.Descriptor instead.
func (*GetSalaryLeaderboardRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{23}
}

func (x *GetSalaryLeaderboardRes) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

func (x *GetSalaryLeaderboardRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetSalaryLeaderboardRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSalaryLeaderboardRes) GetSalary() uint32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetSalaryLeaderboardRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type RaiseProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem   string `protobuf:"bytes,1,opt,name=Problem,proto3" json:"Problem,omitempty"`
	UserID    string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CompanyID string `protobuf:"bytes,3,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *RaiseProblemReq) Reset() {
	*x = RaiseProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaiseProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaiseProblemReq) ProtoMessage() {}

func (x *RaiseProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaiseProblemReq.ProtoReflect.Descriptor instead.
func (*RaiseProblemReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{24}
}

func (x *RaiseProblemReq) GetProblem() string {
	if x != nil {
		return x.Problem
	}
	return ""
}

func (x *RaiseProblemReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RaiseProblemReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetProblemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetProblemsReq) Reset() {
	*x = GetProblemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemsReq) ProtoMessage() {}

func (x *GetProblemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemsReq.ProtoReflect.Descriptor instead.
func (*GetProblemsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{25}
}

func (x *GetProblemsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetProblemsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemID  uint32 `protobuf:"varint,1,opt,name=ProblemID,proto3" json:"ProblemID,omitempty"`
	Problem    string `protobuf:"bytes,2,opt,name=Problem,proto3" json:"Problem,omitempty"`
	RaisedBy   string `protobuf:"bytes,3,opt,name=RaisedBy,proto3" json:"RaisedBy,omitempty"`
	IsAssigned bool   `protobuf:"varint,4,opt,name=IsAssigned,proto3" json:"IsAssigned,omitempty"`
	IsResolved bool   `protobuf:"varint,5,opt,name=IsResolved,proto3" json:"IsResolved,omitempty"`
}

func (x *GetProblemsRes) Reset() {
	*x = GetProblemsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemsRes) ProtoMessage() {}

func (x *GetProblemsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemsRes.ProtoReflect.Descriptor instead.
func (*GetProblemsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{26}
}

func (x *GetProblemsRes) GetProblemID() uint32 {
	if x != nil {
		return x.ProblemID
	}
	return 0
}

func (x *GetProblemsRes) GetProblem() string {
	if x != nil {
		return x.Problem
	}
	return ""
}

func (x *GetProblemsRes) GetRaisedBy() string {
	if x != nil {
		return x.RaisedBy
	}
	return ""
}

func (x *GetProblemsRes) GetIsAssigned() bool {
	if x != nil {
		return x.IsAssigned
	}
	return false
}

func (x *GetProblemsRes) GetIsResolved() bool {
	if x != nil {
		return x.IsResolved
	}
	return false
}

type GetProfileViewsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string               `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	From      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
}

func (x *GetProfileViewsReq) Reset() {
	*x = GetProfileViewsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileViewsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileViewsReq) ProtoMessage() {}

func (x *GetProfileViewsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileViewsReq.ProtoReflect.Descriptor instead.
func (*GetProfileViewsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{27}
}

func (x *GetProfileViewsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetProfileViewsReq) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetProfileViewsReq) GetTo() *timestamp.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetProfileViewsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Views     uint32 `protobuf:"varint,2,opt,name=Views,proto3" json:"Views,omitempty"`
}

func (x *GetProfileViewsRes) Reset() {
	*x = GetProfileViewsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileViewsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileViewsRes) ProtoMessage() {}

func (x *GetProfileViewsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileViewsRes.ProtoReflect.Descriptor instead.
func (*GetProfileViewsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{28}
}

func (x *GetProfileViewsRes) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetProfileViewsRes) GetViews() uint32 {
	if x != nil {
		return x.Views
	}
	return 0
}

type GetVisitorsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string               `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	From      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
}

func (x *GetVisitorsReq) Reset() {
	*x = GetVisitorsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisitorsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisitorsReq) ProtoMessage() {}

func (x *GetVisitorsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisitorsReq.ProtoReflect.Descriptor instead.
func (*GetVisitorsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{29}
}

func (x *GetVisitorsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetVisitorsReq) GetFrom() *timestamp.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetVisitorsReq) GetTo() *timestamp.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetVisitorsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string               `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email       string               `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	VisitedTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=VisitedTime,proto3" json:"VisitedTime,omitempty"`
}

func (x *GetVisitorsRes) Reset() {
	*x = GetVisitorsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVisitorsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVisitorsRes) ProtoMessage() {}

func (x *GetVisitorsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVisitorsRes.ProtoReflect.Descriptor instead.
func (*GetVisitorsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{30}
}

func (x *GetVisitorsRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVisitorsRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetVisitorsRes) GetVisitedTime() *timestamp.Timestamp {
	if x != nil {
		return x.VisitedTime
	}
	return nil
}

type GetPermisssionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetPermisssionReq) Reset() {
	*x = GetPermisssionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermisssionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermisssionReq) ProtoMessage() {}

func (x *GetPermisssionReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermisssionReq.ProtoReflect.Descriptor instead.
func (*GetPermisssionReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{31}
}

func (x *GetPermisssionReq) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type GetPermisssionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission string `protobuf:"bytes,1,opt,name=Permission,proto3" json:"Permission,omitempty"`
}

func (x *GetPermisssionRes) Reset() {
	*x = GetPermisssionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermisssionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermisssionRes) ProtoMessage() {}

func (x *GetPermisssionRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermisssionRes.ProtoReflect.Descriptor instead.
func (*GetPermisssionRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{32}
}

func (x *GetPermisssionRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type IsEmployeeExistsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID  string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	EmployeeID string `protobuf:"bytes,2,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
}

func (x *IsEmployeeExistsReq) Reset() {
	*x = IsEmployeeExistsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsEmployeeExistsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEmployeeExistsReq) ProtoMessage() {}

func (x *IsEmployeeExistsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEmployeeExistsReq.ProtoReflect.Descriptor instead.
func (*IsEmployeeExistsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{33}
}

func (x *IsEmployeeExistsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *IsEmployeeExistsReq) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

type IsEmployeeExistsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *IsEmployeeExistsRes) Reset() {
	*x = IsEmployeeExistsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsEmployeeExistsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEmployeeExistsRes) ProtoMessage() {}

func (x *IsEmployeeExistsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEmployeeExistsRes.ProtoReflect.Descriptor instead.
func (*IsEmployeeExistsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{34}
}

func (x *IsEmployeeExistsRes) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type AddClientReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	CompanyID string `protobuf:"bytes,2,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *AddClientReq) Reset() {
	*x = AddClientReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddClientReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClientReq) ProtoMessage() {}

func (x *AddClientReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClientReq.ProtoReflect.Descriptor instead.
func (*AddClientReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{35}
}

func (x *AddClientReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddClientReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type AssociateClientWithProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID   string `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	ProjectID  string `protobuf:"bytes,2,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	Contract   uint32 `protobuf:"varint,3,opt,name=Contract,proto3" json:"Contract,omitempty"`
	IsRecieved bool   `protobuf:"varint,4,opt,name=IsRecieved,proto3" json:"IsRecieved,omitempty"`
	CompanyID  string `protobuf:"bytes,5,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *AssociateClientWithProjectReq) Reset() {
	*x = AssociateClientWithProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssociateClientWithProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssociateClientWithProjectReq) ProtoMessage() {}

func (x *AssociateClientWithProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssociateClientWithProjectReq.ProtoReflect.Descriptor instead.
func (*AssociateClientWithProjectReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{36}
}

func (x *AssociateClientWithProjectReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *AssociateClientWithProjectReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *AssociateClientWithProjectReq) GetContract() uint32 {
	if x != nil {
		return x.Contract
	}
	return 0
}

func (x *AssociateClientWithProjectReq) GetIsRecieved() bool {
	if x != nil {
		return x.IsRecieved
	}
	return false
}

func (x *AssociateClientWithProjectReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetClientsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetClientsReq) Reset() {
	*x = GetClientsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientsReq) ProtoMessage() {}

func (x *GetClientsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientsReq.ProtoReflect.Descriptor instead.
func (*GetClientsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{37}
}

func (x *GetClientsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetClientsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID   string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Name       string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email      string   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	ProjectIDs []string `protobuf:"bytes,4,rep,name=ProjectIDs,proto3" json:"ProjectIDs,omitempty"`
}

func (x *GetClientsRes) Reset() {
	*x = GetClientsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientsRes) ProtoMessage() {}

func (x *GetClientsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientsRes.ProtoReflect.Descriptor instead.
func (*GetClientsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{38}
}

func (x *GetClientsRes) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *GetClientsRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetClientsRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetClientsRes) GetProjectIDs() []string {
	if x != nil {
		return x.ProjectIDs
	}
	return nil
}

type GetProjectsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *GetProjectsReq) Reset() {
	*x = GetProjectsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectsReq) ProtoMessage() {}

func (x *GetProjectsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectsReq.ProtoReflect.Descriptor instead.
func (*GetProjectsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{39}
}

func (x *GetProjectsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetProjectsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=ProjectName,proto3" json:"ProjectName,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	ClientID    string `protobuf:"bytes,4,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
}

func (x *GetProjectsRes) Reset() {
	*x = GetProjectsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectsRes) ProtoMessage() {}

func (x *GetProjectsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectsRes.ProtoReflect.Descriptor instead.
func (*GetProjectsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{40}
}

func (x *GetProjectsRes) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetProjectsRes) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *GetProjectsRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetProjectsRes) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type GetRevenueGeneratedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetRevenueGeneratedReq) Reset() {
	*x = GetRevenueGeneratedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRevenueGeneratedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRevenueGeneratedReq) ProtoMessage() {}

func (x *GetRevenueGeneratedReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRevenueGeneratedReq.ProtoReflect.Descriptor instead.
func (*GetRevenueGeneratedReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{41}
}

func (x *GetRevenueGeneratedReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetRevenueGeneratedRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	ClientID  string `protobuf:"bytes,2,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Revenue   uint32 `protobuf:"varint,3,opt,name=Revenue,proto3" json:"Revenue,omitempty"`
}

func (x *GetRevenueGeneratedRes) Reset() {
	*x = GetRevenueGeneratedRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRevenueGeneratedRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRevenueGeneratedRes) ProtoMessage() {}

func (x *GetRevenueGeneratedRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRevenueGeneratedRes.ProtoReflect.Descriptor instead.
func (*GetRevenueGeneratedRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{42}
}

func (x *GetRevenueGeneratedRes) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetRevenueGeneratedRes) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *GetRevenueGeneratedRes) GetRevenue() uint32 {
	if x != nil {
		return x.Revenue
	}
	return 0
}

type UpdateRevenueStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID  string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	ClientID   string `protobuf:"bytes,2,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	IsRecieved bool   `protobuf:"varint,3,opt,name=IsRecieved,proto3" json:"IsRecieved,omitempty"`
	CompanyID  string `protobuf:"bytes,4,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *UpdateRevenueStatusReq) Reset() {
	*x = UpdateRevenueStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRevenueStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRevenueStatusReq) ProtoMessage() {}

func (x *UpdateRevenueStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRevenueStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateRevenueStatusReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateRevenueStatusReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *UpdateRevenueStatusReq) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *UpdateRevenueStatusReq) GetIsRecieved() bool {
	if x != nil {
		return x.IsRecieved
	}
	return false
}

func (x *UpdateRevenueStatusReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type AttachCompanyPoliciesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID          string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	MaxleavesPerMonth  uint32 `protobuf:"varint,2,opt,name=MaxleavesPerMonth,proto3" json:"MaxleavesPerMonth,omitempty"`
	PayDay             uint32 `protobuf:"varint,3,opt,name=PayDay,proto3" json:"PayDay,omitempty"`
	WorkingHoursPerday uint32 `protobuf:"varint,4,opt,name=WorkingHoursPerday,proto3" json:"WorkingHoursPerday,omitempty"`
}

func (x *AttachCompanyPoliciesReq) Reset() {
	*x = AttachCompanyPoliciesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachCompanyPoliciesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachCompanyPoliciesReq) ProtoMessage() {}

func (x *AttachCompanyPoliciesReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachCompanyPoliciesReq.ProtoReflect.Descriptor instead.
func (*AttachCompanyPoliciesReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{44}
}

func (x *AttachCompanyPoliciesReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *AttachCompanyPoliciesReq) GetMaxleavesPerMonth() uint32 {
	if x != nil {
		return x.MaxleavesPerMonth
	}
	return 0
}

func (x *AttachCompanyPoliciesReq) GetPayDay() uint32 {
	if x != nil {
		return x.PayDay
	}
	return 0
}

func (x *AttachCompanyPoliciesReq) GetWorkingHoursPerday() uint32 {
	if x != nil {
		return x.WorkingHoursPerday
	}
	return 0
}

type UpdatePaymentStatusofEmployeeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID     string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	EmployeeID    string `protobuf:"bytes,2,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
	IsPayed       bool   `protobuf:"varint,3,opt,name=isPayed,proto3" json:"isPayed,omitempty"`
	TransactionID string `protobuf:"bytes,4,opt,name=TransactionID,proto3" json:"TransactionID,omitempty"`
}

func (x *UpdatePaymentStatusofEmployeeReq) Reset() {
	*x = UpdatePaymentStatusofEmployeeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentStatusofEmployeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentStatusofEmployeeReq) ProtoMessage() {}

func (x *UpdatePaymentStatusofEmployeeReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentStatusofEmployeeReq.ProtoReflect.Descriptor instead.
func (*UpdatePaymentStatusofEmployeeReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{45}
}

func (x *UpdatePaymentStatusofEmployeeReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *UpdatePaymentStatusofEmployeeReq) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

func (x *UpdatePaymentStatusofEmployeeReq) GetIsPayed() bool {
	if x != nil {
		return x.IsPayed
	}
	return false
}

func (x *UpdatePaymentStatusofEmployeeReq) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

type AssignProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID  string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	EmployeeID string `protobuf:"bytes,2,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
	ProblemID  uint32 `protobuf:"varint,3,opt,name=ProblemID,proto3" json:"ProblemID,omitempty"`
}

func (x *AssignProblemReq) Reset() {
	*x = AssignProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignProblemReq) ProtoMessage() {}

func (x *AssignProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignProblemReq.ProtoReflect.Descriptor instead.
func (*AssignProblemReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{46}
}

func (x *AssignProblemReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *AssignProblemReq) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

func (x *AssignProblemReq) GetProblemID() uint32 {
	if x != nil {
		return x.ProblemID
	}
	return 0
}

type ResolveProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemID  uint32 `protobuf:"varint,1,opt,name=ProblemID,proto3" json:"ProblemID,omitempty"`
	CompanyID  string `protobuf:"bytes,2,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	ResolverID string `protobuf:"bytes,3,opt,name=ResolverID,proto3" json:"ResolverID,omitempty"`
}

func (x *ResolveProblemReq) Reset() {
	*x = ResolveProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveProblemReq) ProtoMessage() {}

func (x *ResolveProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveProblemReq.ProtoReflect.Descriptor instead.
func (*ResolveProblemReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{47}
}

func (x *ResolveProblemReq) GetProblemID() uint32 {
	if x != nil {
		return x.ProblemID
	}
	return 0
}

func (x *ResolveProblemReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *ResolveProblemReq) GetResolverID() string {
	if x != nil {
		return x.ResolverID
	}
	return ""
}

type ApplyForLeaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
	EmployeeID  string `protobuf:"bytes,2,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
	CompanyID   string `protobuf:"bytes,3,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ApplyForLeaveReq) Reset() {
	*x = ApplyForLeaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyForLeaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyForLeaveReq) ProtoMessage() {}

func (x *ApplyForLeaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyForLeaveReq.ProtoReflect.Descriptor instead.
func (*ApplyForLeaveReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{48}
}

func (x *ApplyForLeaveReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ApplyForLeaveReq) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

func (x *ApplyForLeaveReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *ApplyForLeaveReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetEmployeeLeaveRequestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetEmployeeLeaveRequestsReq) Reset() {
	*x = GetEmployeeLeaveRequestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmployeeLeaveRequestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeeLeaveRequestsReq) ProtoMessage() {}

func (x *GetEmployeeLeaveRequestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeeLeaveRequestsReq.ProtoReflect.Descriptor instead.
func (*GetEmployeeLeaveRequestsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{49}
}

func (x *GetEmployeeLeaveRequestsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetEmployeeLeaveRequestsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaveID     uint32 `protobuf:"varint,1,opt,name=LeaveID,proto3" json:"LeaveID,omitempty"`
	Date        string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	EmployeeID  string `protobuf:"bytes,3,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *GetEmployeeLeaveRequestsRes) Reset() {
	*x = GetEmployeeLeaveRequestsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmployeeLeaveRequestsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmployeeLeaveRequestsRes) ProtoMessage() {}

func (x *GetEmployeeLeaveRequestsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmployeeLeaveRequestsRes.ProtoReflect.Descriptor instead.
func (*GetEmployeeLeaveRequestsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{50}
}

func (x *GetEmployeeLeaveRequestsRes) GetLeaveID() uint32 {
	if x != nil {
		return x.LeaveID
	}
	return 0
}

func (x *GetEmployeeLeaveRequestsRes) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetEmployeeLeaveRequestsRes) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

func (x *GetEmployeeLeaveRequestsRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DecideEmployeeLeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaveID   uint32 `protobuf:"varint,1,opt,name=LeaveID,proto3" json:"LeaveID,omitempty"`
	IsAllowed bool   `protobuf:"varint,2,opt,name=IsAllowed,proto3" json:"IsAllowed,omitempty"`
}

func (x *DecideEmployeeLeaveRequest) Reset() {
	*x = DecideEmployeeLeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecideEmployeeLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideEmployeeLeaveRequest) ProtoMessage() {}

func (x *DecideEmployeeLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideEmployeeLeaveRequest.ProtoReflect.Descriptor instead.
func (*DecideEmployeeLeaveRequest) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{51}
}

func (x *DecideEmployeeLeaveRequest) GetLeaveID() uint32 {
	if x != nil {
		return x.LeaveID
	}
	return 0
}

func (x *DecideEmployeeLeaveRequest) GetIsAllowed() bool {
	if x != nil {
		return x.IsAllowed
	}
	return false
}

type GetLeavesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	From      string `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To        string `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
}

func (x *GetLeavesReq) Reset() {
	*x = GetLeavesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeavesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeavesReq) ProtoMessage() {}

func (x *GetLeavesReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeavesReq.ProtoReflect.Descriptor instead.
func (*GetLeavesReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{52}
}

func (x *GetLeavesReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetLeavesReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetLeavesReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type GetLeavesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmployeeID  string `protobuf:"bytes,1,opt,name=EmployeeID,proto3" json:"EmployeeID,omitempty"`
	Date        string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *GetLeavesRes) Reset() {
	*x = GetLeavesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeavesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeavesRes) ProtoMessage() {}

func (x *GetLeavesRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeavesRes.ProtoReflect.Descriptor instead.
func (*GetLeavesRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{53}
}

func (x *GetLeavesRes) GetEmployeeID() string {
	if x != nil {
		return x.EmployeeID
	}
	return ""
}

func (x *GetLeavesRes) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetLeavesRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetStreamofClientsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	ProjectID string `protobuf:"bytes,2,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetStreamofClientsReq) Reset() {
	*x = GetStreamofClientsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamofClientsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamofClientsReq) ProtoMessage() {}

func (x *GetStreamofClientsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamofClientsReq.ProtoReflect.Descriptor instead.
func (*GetStreamofClientsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{54}
}

func (x *GetStreamofClientsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetStreamofClientsReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetStreamofClientsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID string `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
}

func (x *GetStreamofClientsRes) Reset() {
	*x = GetStreamofClientsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamofClientsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamofClientsRes) ProtoMessage() {}

func (x *GetStreamofClientsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamofClientsRes.ProtoReflect.Descriptor instead.
func (*GetStreamofClientsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{55}
}

func (x *GetStreamofClientsRes) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type PostJobsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID      string   `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Role           string   `protobuf:"bytes,2,opt,name=Role,proto3" json:"Role,omitempty"`
	Vacancy        uint32   `protobuf:"varint,3,opt,name=Vacancy,proto3" json:"Vacancy,omitempty"`
	Description    string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	MinExperiance  uint32   `protobuf:"varint,5,opt,name=MinExperiance,proto3" json:"MinExperiance,omitempty"`
	MinExpectedCTC float32  `protobuf:"fixed32,6,opt,name=MinExpectedCTC,proto3" json:"MinExpectedCTC,omitempty"`
	MaxExpectedCTC float32  `protobuf:"fixed32,7,opt,name=MaxExpectedCTC,proto3" json:"MaxExpectedCTC,omitempty"`
	IsRemote       bool     `protobuf:"varint,8,opt,name=IsRemote,proto3" json:"IsRemote,omitempty"`
	JobLocation    *Address `protobuf:"bytes,9,opt,name=JobLocation,proto3" json:"JobLocation,omitempty"`
}

func (x *PostJobsReq) Reset() {
	*x = PostJobsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostJobsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostJobsReq) ProtoMessage() {}

func (x *PostJobsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostJobsReq.ProtoReflect.Descriptor instead.
func (*PostJobsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{56}
}

func (x *PostJobsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *PostJobsReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *PostJobsReq) GetVacancy() uint32 {
	if x != nil {
		return x.Vacancy
	}
	return 0
}

func (x *PostJobsReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PostJobsReq) GetMinExperiance() uint32 {
	if x != nil {
		return x.MinExperiance
	}
	return 0
}

func (x *PostJobsReq) GetMinExpectedCTC() float32 {
	if x != nil {
		return x.MinExpectedCTC
	}
	return 0
}

func (x *PostJobsReq) GetMaxExpectedCTC() float32 {
	if x != nil {
		return x.MaxExpectedCTC
	}
	return 0
}

func (x *PostJobsReq) GetIsRemote() bool {
	if x != nil {
		return x.IsRemote
	}
	return false
}

func (x *PostJobsReq) GetJobLocation() *Address {
	if x != nil {
		return x.JobLocation
	}
	return nil
}

type GetJobsofCompanyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetJobsofCompanyReq) Reset() {
	*x = GetJobsofCompanyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsofCompanyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsofCompanyReq) ProtoMessage() {}

func (x *GetJobsofCompanyReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsofCompanyReq.ProtoReflect.Descriptor instead.
func (*GetJobsofCompanyReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{57}
}

func (x *GetJobsofCompanyReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetJobsofCompanyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID               string   `protobuf:"bytes,1,opt,name=JobID,proto3" json:"JobID,omitempty"`
	Role                string   `protobuf:"bytes,2,opt,name=Role,proto3" json:"Role,omitempty"`
	Vacancy             uint32   `protobuf:"varint,3,opt,name=Vacancy,proto3" json:"Vacancy,omitempty"`
	Description         string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	MinExperiance       uint32   `protobuf:"varint,5,opt,name=MinExperiance,proto3" json:"MinExperiance,omitempty"`
	MinExpectedCTC      float32  `protobuf:"fixed32,6,opt,name=MinExpectedCTC,proto3" json:"MinExpectedCTC,omitempty"`
	MaxExpectedCTC      float32  `protobuf:"fixed32,7,opt,name=MaxExpectedCTC,proto3" json:"MaxExpectedCTC,omitempty"`
	IsRemote            bool     `protobuf:"varint,8,opt,name=IsRemote,proto3" json:"IsRemote,omitempty"`
	JobLocation         *Address `protobuf:"bytes,9,opt,name=JobLocation,proto3" json:"JobLocation,omitempty"`
	TotalPersonsApplied uint32   `protobuf:"varint,10,opt,name=TotalPersonsApplied,proto3" json:"TotalPersonsApplied,omitempty"`
}

func (x *GetJobsofCompanyRes) Reset() {
	*x = GetJobsofCompanyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsofCompanyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsofCompanyRes) ProtoMessage() {}

func (x *GetJobsofCompanyRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsofCompanyRes.ProtoReflect.Descriptor instead.
func (*GetJobsofCompanyRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{58}
}

func (x *GetJobsofCompanyRes) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *GetJobsofCompanyRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetJobsofCompanyRes) GetVacancy() uint32 {
	if x != nil {
		return x.Vacancy
	}
	return 0
}

func (x *GetJobsofCompanyRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetJobsofCompanyRes) GetMinExperiance() uint32 {
	if x != nil {
		return x.MinExperiance
	}
	return 0
}

func (x *GetJobsofCompanyRes) GetMinExpectedCTC() float32 {
	if x != nil {
		return x.MinExpectedCTC
	}
	return 0
}

func (x *GetJobsofCompanyRes) GetMaxExpectedCTC() float32 {
	if x != nil {
		return x.MaxExpectedCTC
	}
	return 0
}

func (x *GetJobsofCompanyRes) GetIsRemote() bool {
	if x != nil {
		return x.IsRemote
	}
	return false
}

func (x *GetJobsofCompanyRes) GetJobLocation() *Address {
	if x != nil {
		return x.JobLocation
	}
	return nil
}

func (x *GetJobsofCompanyRes) GetTotalPersonsApplied() uint32 {
	if x != nil {
		return x.TotalPersonsApplied
	}
	return 0
}

type GetJobApplicationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	JobID     string `protobuf:"bytes,2,opt,name=JobID,proto3" json:"JobID,omitempty"`
}

func (x *GetJobApplicationsReq) Reset() {
	*x = GetJobApplicationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobApplicationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobApplicationsReq) ProtoMessage() {}

func (x *GetJobApplicationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobApplicationsReq.ProtoReflect.Descriptor instead.
func (*GetJobApplicationsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{59}
}

func (x *GetJobApplicationsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetJobApplicationsReq) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

type GetJobApplicationsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationID      string   `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	Name               string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email              string   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Mobile             string   `protobuf:"bytes,4,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	AddressofApplicant *Address `protobuf:"bytes,5,opt,name=AddressofApplicant,proto3" json:"AddressofApplicant,omitempty"`
	ResumeID           string   `protobuf:"bytes,6,opt,name=ResumeID,proto3" json:"ResumeID,omitempty"`
	HighestEducation   string   `protobuf:"bytes,7,opt,name=HighestEducation,proto3" json:"HighestEducation,omitempty"`
	Nationality        string   `protobuf:"bytes,8,opt,name=Nationality,proto3" json:"Nationality,omitempty"`
	Experiance         uint32   `protobuf:"varint,9,opt,name=Experiance,proto3" json:"Experiance,omitempty"`
	CurrentCTC         float32  `protobuf:"fixed32,10,opt,name=CurrentCTC,proto3" json:"CurrentCTC,omitempty"`
}

func (x *GetJobApplicationsRes) Reset() {
	*x = GetJobApplicationsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobApplicationsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobApplicationsRes) ProtoMessage() {}

func (x *GetJobApplicationsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobApplicationsRes.ProtoReflect.Descriptor instead.
func (*GetJobApplicationsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{60}
}

func (x *GetJobApplicationsRes) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *GetJobApplicationsRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetJobApplicationsRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetJobApplicationsRes) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *GetJobApplicationsRes) GetAddressofApplicant() *Address {
	if x != nil {
		return x.AddressofApplicant
	}
	return nil
}

func (x *GetJobApplicationsRes) GetResumeID() string {
	if x != nil {
		return x.ResumeID
	}
	return ""
}

func (x *GetJobApplicationsRes) GetHighestEducation() string {
	if x != nil {
		return x.HighestEducation
	}
	return ""
}

func (x *GetJobApplicationsRes) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *GetJobApplicationsRes) GetExperiance() uint32 {
	if x != nil {
		return x.Experiance
	}
	return 0
}

func (x *GetJobApplicationsRes) GetCurrentCTC() float32 {
	if x != nil {
		return x.CurrentCTC
	}
	return 0
}

type ShortlistApplicationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID     string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	ApplicationID string `protobuf:"bytes,2,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
}

func (x *ShortlistApplicationsReq) Reset() {
	*x = ShortlistApplicationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortlistApplicationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortlistApplicationsReq) ProtoMessage() {}

func (x *ShortlistApplicationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortlistApplicationsReq.ProtoReflect.Descriptor instead.
func (*ShortlistApplicationsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{61}
}

func (x *ShortlistApplicationsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *ShortlistApplicationsReq) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

type GetShortlistedApplicationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	JobID     string `protobuf:"bytes,2,opt,name=JobID,proto3" json:"JobID,omitempty"`
}

func (x *GetShortlistedApplicationsReq) Reset() {
	*x = GetShortlistedApplicationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortlistedApplicationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortlistedApplicationsReq) ProtoMessage() {}

func (x *GetShortlistedApplicationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortlistedApplicationsReq.ProtoReflect.Descriptor instead.
func (*GetShortlistedApplicationsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{62}
}

func (x *GetShortlistedApplicationsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetShortlistedApplicationsReq) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

type GetShortlistedApplicationsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationID      string   `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	Name               string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email              string   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Mobile             string   `protobuf:"bytes,4,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	AddressofApplicant *Address `protobuf:"bytes,5,opt,name=AddressofApplicant,proto3" json:"AddressofApplicant,omitempty"`
	ResumeID           string   `protobuf:"bytes,6,opt,name=ResumeID,proto3" json:"ResumeID,omitempty"`
	HighestEducation   string   `protobuf:"bytes,7,opt,name=HighestEducation,proto3" json:"HighestEducation,omitempty"`
	Nationality        string   `protobuf:"bytes,8,opt,name=Nationality,proto3" json:"Nationality,omitempty"`
	Experiance         uint32   `protobuf:"varint,9,opt,name=Experiance,proto3" json:"Experiance,omitempty"`
	CurrentCTC         float32  `protobuf:"fixed32,10,opt,name=CurrentCTC,proto3" json:"CurrentCTC,omitempty"`
}

func (x *GetShortlistedApplicationsRes) Reset() {
	*x = GetShortlistedApplicationsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShortlistedApplicationsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortlistedApplicationsRes) ProtoMessage() {}

func (x *GetShortlistedApplicationsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortlistedApplicationsRes.ProtoReflect.Descriptor instead.
func (*GetShortlistedApplicationsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{63}
}

func (x *GetShortlistedApplicationsRes) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *GetShortlistedApplicationsRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetShortlistedApplicationsRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetShortlistedApplicationsRes) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *GetShortlistedApplicationsRes) GetAddressofApplicant() *Address {
	if x != nil {
		return x.AddressofApplicant
	}
	return nil
}

func (x *GetShortlistedApplicationsRes) GetResumeID() string {
	if x != nil {
		return x.ResumeID
	}
	return ""
}

func (x *GetShortlistedApplicationsRes) GetHighestEducation() string {
	if x != nil {
		return x.HighestEducation
	}
	return ""
}

func (x *GetShortlistedApplicationsRes) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *GetShortlistedApplicationsRes) GetExperiance() uint32 {
	if x != nil {
		return x.Experiance
	}
	return 0
}

func (x *GetShortlistedApplicationsRes) GetCurrentCTC() float32 {
	if x != nil {
		return x.CurrentCTC
	}
	return 0
}

type GetJobsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Role      string `protobuf:"bytes,2,opt,name=Role,proto3" json:"Role,omitempty"`
	City      string `protobuf:"bytes,3,opt,name=City,proto3" json:"City,omitempty"`
}

func (x *GetJobsReq) Reset() {
	*x = GetJobsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsReq) ProtoMessage() {}

func (x *GetJobsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsReq.ProtoReflect.Descriptor instead.
func (*GetJobsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{64}
}

func (x *GetJobsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetJobsReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetJobsReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type GetJobsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID      string   `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Role           string   `protobuf:"bytes,2,opt,name=Role,proto3" json:"Role,omitempty"`
	Vacancy        uint32   `protobuf:"varint,3,opt,name=Vacancy,proto3" json:"Vacancy,omitempty"`
	Description    string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	MinExperiance  uint32   `protobuf:"varint,5,opt,name=MinExperiance,proto3" json:"MinExperiance,omitempty"`
	MinExpectedCTC float32  `protobuf:"fixed32,6,opt,name=MinExpectedCTC,proto3" json:"MinExpectedCTC,omitempty"`
	MaxExpectedCTC float32  `protobuf:"fixed32,7,opt,name=MaxExpectedCTC,proto3" json:"MaxExpectedCTC,omitempty"`
	IsRemote       bool     `protobuf:"varint,8,opt,name=IsRemote,proto3" json:"IsRemote,omitempty"`
	JobLocation    *Address `protobuf:"bytes,9,opt,name=JobLocation,proto3" json:"JobLocation,omitempty"`
	JobID          string   `protobuf:"bytes,10,opt,name=JobID,proto3" json:"JobID,omitempty"`
}

func (x *GetJobsRes) Reset() {
	*x = GetJobsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsRes) ProtoMessage() {}

func (x *GetJobsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsRes.ProtoReflect.Descriptor instead.
func (*GetJobsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{65}
}

func (x *GetJobsRes) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetJobsRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetJobsRes) GetVacancy() uint32 {
	if x != nil {
		return x.Vacancy
	}
	return 0
}

func (x *GetJobsRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetJobsRes) GetMinExperiance() uint32 {
	if x != nil {
		return x.MinExperiance
	}
	return 0
}

func (x *GetJobsRes) GetMinExpectedCTC() float32 {
	if x != nil {
		return x.MinExpectedCTC
	}
	return 0
}

func (x *GetJobsRes) GetMaxExpectedCTC() float32 {
	if x != nil {
		return x.MaxExpectedCTC
	}
	return 0
}

func (x *GetJobsRes) GetIsRemote() bool {
	if x != nil {
		return x.IsRemote
	}
	return false
}

func (x *GetJobsRes) GetJobLocation() *Address {
	if x != nil {
		return x.JobLocation
	}
	return nil
}

func (x *GetJobsRes) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

type GetAllJobApplicationsofUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetAllJobApplicationsofUserReq) Reset() {
	*x = GetAllJobApplicationsofUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllJobApplicationsofUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllJobApplicationsofUserReq) ProtoMessage() {}

func (x *GetAllJobApplicationsofUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllJobApplicationsofUserReq.ProtoReflect.Descriptor instead.
func (*GetAllJobApplicationsofUserReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{66}
}

func (x *GetAllJobApplicationsofUserReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetAllJobApplicationsofUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationID string `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	Status        string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	CompanyID     string `protobuf:"bytes,3,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Role          string `protobuf:"bytes,4,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *GetAllJobApplicationsofUserRes) Reset() {
	*x = GetAllJobApplicationsofUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllJobApplicationsofUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllJobApplicationsofUserRes) ProtoMessage() {}

func (x *GetAllJobApplicationsofUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllJobApplicationsofUserRes.ProtoReflect.Descriptor instead.
func (*GetAllJobApplicationsofUserRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{67}
}

func (x *GetAllJobApplicationsofUserRes) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *GetAllJobApplicationsofUserRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetAllJobApplicationsofUserRes) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetAllJobApplicationsofUserRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ScheduleInterviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationID string `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	CompanyID     string `protobuf:"bytes,2,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Date          string `protobuf:"bytes,3,opt,name=Date,proto3" json:"Date,omitempty"`
	Description   string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Time          string `protobuf:"bytes,5,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *ScheduleInterviewReq) Reset() {
	*x = ScheduleInterviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleInterviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleInterviewReq) ProtoMessage() {}

func (x *ScheduleInterviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleInterviewReq.ProtoReflect.Descriptor instead.
func (*ScheduleInterviewReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{68}
}

func (x *ScheduleInterviewReq) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *ScheduleInterviewReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *ScheduleInterviewReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ScheduleInterviewReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScheduleInterviewReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type GetScheduledInterviewsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetScheduledInterviewsReq) Reset() {
	*x = GetScheduledInterviewsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduledInterviewsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledInterviewsReq) ProtoMessage() {}

func (x *GetScheduledInterviewsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledInterviewsReq.ProtoReflect.Descriptor instead.
func (*GetScheduledInterviewsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{69}
}

func (x *GetScheduledInterviewsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetScheduledInterviewsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationID string `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	Date          string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Description   string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Time          string `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *GetScheduledInterviewsRes) Reset() {
	*x = GetScheduledInterviewsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduledInterviewsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledInterviewsRes) ProtoMessage() {}

func (x *GetScheduledInterviewsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledInterviewsRes.ProtoReflect.Descriptor instead.
func (*GetScheduledInterviewsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{70}
}

func (x *GetScheduledInterviewsRes) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *GetScheduledInterviewsRes) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetScheduledInterviewsRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetScheduledInterviewsRes) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type GetDetailsofApplicationByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID     string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	ApplicationID string `protobuf:"bytes,2,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
}

func (x *GetDetailsofApplicationByIDReq) Reset() {
	*x = GetDetailsofApplicationByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailsofApplicationByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailsofApplicationByIDReq) ProtoMessage() {}

func (x *GetDetailsofApplicationByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailsofApplicationByIDReq.ProtoReflect.Descriptor instead.
func (*GetDetailsofApplicationByIDReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{71}
}

func (x *GetDetailsofApplicationByIDReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetDetailsofApplicationByIDReq) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

type GetDetailsofApplicationByIDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationID      string   `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	Name               string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email              string   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Mobile             string   `protobuf:"bytes,4,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	AddressofApplicant *Address `protobuf:"bytes,5,opt,name=AddressofApplicant,proto3" json:"AddressofApplicant,omitempty"`
	ResumeID           string   `protobuf:"bytes,6,opt,name=ResumeID,proto3" json:"ResumeID,omitempty"`
	HighestEducation   string   `protobuf:"bytes,7,opt,name=HighestEducation,proto3" json:"HighestEducation,omitempty"`
	Nationality        string   `protobuf:"bytes,8,opt,name=Nationality,proto3" json:"Nationality,omitempty"`
	Experiance         uint32   `protobuf:"varint,9,opt,name=Experiance,proto3" json:"Experiance,omitempty"`
	CurrentCTC         float32  `protobuf:"fixed32,10,opt,name=CurrentCTC,proto3" json:"CurrentCTC,omitempty"`
}

func (x *GetDetailsofApplicationByIDRes) Reset() {
	*x = GetDetailsofApplicationByIDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDetailsofApplicationByIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDetailsofApplicationByIDRes) ProtoMessage() {}

func (x *GetDetailsofApplicationByIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDetailsofApplicationByIDRes.ProtoReflect.Descriptor instead.
func (*GetDetailsofApplicationByIDRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{72}
}

func (x *GetDetailsofApplicationByIDRes) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *GetDetailsofApplicationByIDRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDetailsofApplicationByIDRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetDetailsofApplicationByIDRes) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *GetDetailsofApplicationByIDRes) GetAddressofApplicant() *Address {
	if x != nil {
		return x.AddressofApplicant
	}
	return nil
}

func (x *GetDetailsofApplicationByIDRes) GetResumeID() string {
	if x != nil {
		return x.ResumeID
	}
	return ""
}

func (x *GetDetailsofApplicationByIDRes) GetHighestEducation() string {
	if x != nil {
		return x.HighestEducation
	}
	return ""
}

func (x *GetDetailsofApplicationByIDRes) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *GetDetailsofApplicationByIDRes) GetExperiance() uint32 {
	if x != nil {
		return x.Experiance
	}
	return 0
}

func (x *GetDetailsofApplicationByIDRes) GetCurrentCTC() float32 {
	if x != nil {
		return x.CurrentCTC
	}
	return 0
}

type GetScheduledInterviewsofUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetScheduledInterviewsofUserReq) Reset() {
	*x = GetScheduledInterviewsofUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduledInterviewsofUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledInterviewsofUserReq) ProtoMessage() {}

func (x *GetScheduledInterviewsofUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledInterviewsofUserReq.ProtoReflect.Descriptor instead.
func (*GetScheduledInterviewsofUserReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{73}
}

func (x *GetScheduledInterviewsofUserReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetScheduledInterviewsofUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationID string `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	CompanyID     string `protobuf:"bytes,2,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	Date          string `protobuf:"bytes,3,opt,name=Date,proto3" json:"Date,omitempty"`
	Description   string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Time          string `protobuf:"bytes,5,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *GetScheduledInterviewsofUserRes) Reset() {
	*x = GetScheduledInterviewsofUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduledInterviewsofUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledInterviewsofUserRes) ProtoMessage() {}

func (x *GetScheduledInterviewsofUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledInterviewsofUserRes.ProtoReflect.Descriptor instead.
func (*GetScheduledInterviewsofUserRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{74}
}

func (x *GetScheduledInterviewsofUserRes) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *GetScheduledInterviewsofUserRes) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

func (x *GetScheduledInterviewsofUserRes) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetScheduledInterviewsofUserRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetScheduledInterviewsofUserRes) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type RescheduleInterviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationID string `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	Date          string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Description   string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Time          string `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *RescheduleInterviewReq) Reset() {
	*x = RescheduleInterviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RescheduleInterviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RescheduleInterviewReq) ProtoMessage() {}

func (x *RescheduleInterviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RescheduleInterviewReq.ProtoReflect.Descriptor instead.
func (*RescheduleInterviewReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{75}
}

func (x *RescheduleInterviewReq) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

func (x *RescheduleInterviewReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *RescheduleInterviewReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RescheduleInterviewReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type GetAssignedProblemsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CompanyID string `protobuf:"bytes,2,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetAssignedProblemsReq) Reset() {
	*x = GetAssignedProblemsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedProblemsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedProblemsReq) ProtoMessage() {}

func (x *GetAssignedProblemsReq) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedProblemsReq.ProtoReflect.Descriptor instead.
func (*GetAssignedProblemsReq) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{76}
}

func (x *GetAssignedProblemsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetAssignedProblemsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetAssignedProblemsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemID uint32 `protobuf:"varint,1,opt,name=ProblemID,proto3" json:"ProblemID,omitempty"`
	Problem   string `protobuf:"bytes,2,opt,name=Problem,proto3" json:"Problem,omitempty"`
	RaisedBy  string `protobuf:"bytes,3,opt,name=RaisedBy,proto3" json:"RaisedBy,omitempty"`
}

func (x *GetAssignedProblemsRes) Reset() {
	*x = GetAssignedProblemsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_company_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedProblemsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedProblemsRes) ProtoMessage() {}

func (x *GetAssignedProblemsRes) ProtoReflect() protoreflect.Message {
	mi := &file_company_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedProblemsRes.ProtoReflect.Descriptor instead.
func (*GetAssignedProblemsRes) Descriptor() ([]byte, []int) {
	return file_company_proto_rawDescGZIP(), []int{77}
}

func (x *GetAssignedProblemsRes) GetProblemID() uint32 {
	if x != nil {
		return x.ProblemID
	}
	return 0
}

func (x *GetAssignedProblemsRes) GetProblem() string {
	if x != nil {
		return x.Problem
	}
	return ""
}

func (x *GetAssignedProblemsRes) GetRaisedBy() string {
	if x != nil {
		return x.RaisedBy
	}
	return ""
}

var File_company_proto protoreflect.FileDescriptor

var file_company_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x69, 0x6e, 0x4e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x69, 0x6e, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe6, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x38, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0f, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x54, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x43, 0x54, 0x43, 0x22, 0x79, 0x0a, 0x1d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52,
	0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x22, 0x42, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x77, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x22, 0xa4, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x77, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x22, 0xb1, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x47,
	0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x52, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x65, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x0f, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7a, 0x0a, 0x1c, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x66, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x6e, 0x0a, 0x18, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x66, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x3a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x48, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x70, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x22, 0x37, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x22, 0x8f, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x22, 0x61, 0x0a, 0x0f, 0x52, 0x61, 0x69, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x69, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x69, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x49, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x49, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x22, 0x8e, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x12, 0x2e, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x54, 0x6f, 0x22, 0x48, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x69, 0x65, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x56, 0x69, 0x65, 0x77, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x02, 0x54, 0x6f, 0x22, 0x78, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x3c, 0x0a, 0x0b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x23,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x13, 0x49, 0x73, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x22, 0x2d, 0x0a,
	0x13, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x22, 0xb3, 0x01, 0x0a, 0x1d, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x52, 0x65,
	0x63, 0x69, 0x65, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73,
	0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x75, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73, 0x22, 0x2e, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x8e, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x36, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x6c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x52, 0x65,
	0x63, 0x69, 0x65, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73,
	0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0xae, 0x01, 0x0a, 0x18, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x61, 0x78, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x50, 0x65,
	0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x4d, 0x61,
	0x78, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x44, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x50, 0x61, 0x79, 0x44, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x50, 0x65, 0x72, 0x64, 0x61, 0x79, 0x22, 0xa0, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x6f,
	0x66, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x50, 0x61, 0x79, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x50,
	0x61, 0x79, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x10, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x22, 0x6f, 0x0a, 0x11, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x72, 0x49, 0x44, 0x22, 0x86, 0x01, 0x0a, 0x10,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x6f, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x22, 0x8d, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x54, 0x0a, 0x1a, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x22, 0x50, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x22, 0x64, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6f, 0x66, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x6f, 0x66, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xc1, 0x02, 0x0a, 0x0b, 0x50, 0x6f,
	0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x56, 0x61,
	0x63, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x54, 0x43, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x43, 0x54, 0x43, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x43, 0x54, 0x43, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x4d,
	0x61, 0x78, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x54, 0x43, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x49, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x4a, 0x6f, 0x62,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x0b, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x6f, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x22, 0xf3, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x6f, 0x66,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f,
	0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x54, 0x43, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x54, 0x43, 0x12, 0x26,
	0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x54, 0x43,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x43, 0x54, 0x43, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x4a, 0x6f, 0x62, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0xeb, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x6f, 0x66, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x12, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74,
	0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x54,
	0x43, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x54, 0x43, 0x22, 0x5e, 0x0a, 0x18, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0xf3, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x40, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x12, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x2a, 0x0a, 0x10, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x48, 0x69, 0x67, 0x68,
	0x65, 0x73, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x54, 0x43, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x54, 0x43, 0x22, 0x52,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69,
	0x74, 0x79, 0x22, 0xd6, 0x02, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x43, 0x54, 0x43, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x4d,
	0x69, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x54, 0x43, 0x12, 0x26, 0x0a,
	0x0e, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x54, 0x43, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x43, 0x54, 0x43, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x12, 0x32, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0x38, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x6f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x90, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x4a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x6f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x39, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x8b, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x6f, 0x66, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xf4,
	0x02, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x6f, 0x66, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x12, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x6f, 0x66, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x48, 0x69, 0x67, 0x68, 0x65,
	0x73, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x54, 0x43, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x54, 0x43, 0x22, 0x39, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x6f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0xaf, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x6f, 0x66, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a,
	0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x6c, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x61, 0x69, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x61, 0x69, 0x73, 0x65, 0x64, 0x42, 0x79, 0x32, 0x9b, 0x20, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c,
	0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x1a, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x7d, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x77, 0x69, 0x74, 0x68, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x77, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x77, 0x69, 0x74, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x45, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0b,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x0e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x19, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x66,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x6f, 0x66, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x15, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x66, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x66, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x65, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x70,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x70, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x30, 0x01, 0x12, 0x5c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x30, 0x01,
	0x12, 0x40, 0x0a, 0x0c, 0x52, 0x61, 0x69, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x52, 0x61, 0x69, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x47, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x4e,
	0x0a, 0x10, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x73, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x73, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3a,
	0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x1a, 0x41, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12,
	0x3e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12,
	0x59, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x15, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x62,
	0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x6f, 0x66, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12,
	0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x6f, 0x66, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x42, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0d,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x6f, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x6f, 0x72,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x68, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x13, 0x44, 0x65,
	0x63, 0x69, 0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x65, 0x63, 0x69,
	0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x58, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6f, 0x66, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x6f, 0x66, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x6f, 0x66, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x28, 0x01, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x50, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x6f, 0x66, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x73, 0x6f, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x73, 0x6f, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x30,
	0x01, 0x12, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x15, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a,
	0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x62, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x6f, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x6f, 0x66, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x27, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x6f, 0x66, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x6f, 0x66, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x12, 0x74,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x6f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x6f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x6f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1f, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x6e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x30, 0x01, 0x12, 0x35, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12,
	0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x71, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x6f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x6f, 0x66, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x4a, 0x6f, 0x62, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x6f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x59,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x70,
	0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_company_proto_rawDescOnce sync.Once
	file_company_proto_rawDescData = file_company_proto_rawDesc
)

func file_company_proto_rawDescGZIP() []byte {
	file_company_proto_rawDescOnce.Do(func() {
		file_company_proto_rawDescData = protoimpl.X.CompressGZIP(file_company_proto_rawDescData)
	})
	return file_company_proto_rawDescData
}

var file_company_proto_msgTypes = make([]protoimpl.MessageInfo, 78)
var file_company_proto_goTypes = []interface{}{
	(*Address)(nil),                            // 0: company.Address
	(*RegisterCompanyRequest)(nil),             // 1: company.RegisterCompanyRequest
	(*GetCompanyTypesRes)(nil),                 // 2: company.GetCompanyTypesRes
	(*CompanyResponce)(nil),                    // 3: company.CompanyResponce
	(*Permission)(nil),                         // 4: company.Permission
	(*AddEmployeeReq)(nil),                     // 5: company.AddEmployeeReq
	(*AttachRoleWithPermisssionsReq)(nil),      // 6: company.AttachRoleWithPermisssionsReq
	(*GetAttachedRoleswithPermissionsReq)(nil), // 7: company.GetAttachedRoleswithPermissionsReq
	(*GetAttachedRoleswithPermissionsRes)(nil), // 8: company.GetAttachedRoleswithPermissionsRes
	(*AddCompanyTypeReq)(nil),                  // 9: company.AddCompanyTypeReq
	(*AddPermissionReq)(nil),                   // 10: company.AddPermissionReq
	(*GetCompanyReq)(nil),                      // 11: company.GetCompanyReq
	(*GetCompanyDetailsRes)(nil),               // 12: company.GetCompanyDetailsRes
	(*GetCompanyEmployeesRes)(nil),             // 13: company.GetCompanyEmployeesRes
	(*LogintoCompanyReq)(nil),                  // 14: company.LogintoCompanyReq
	(*LogintoCompanyRes)(nil),                  // 15: company.LogintoCompanyRes
	(*SearchCompanyReq)(nil),                   // 16: company.SearchCompanyReq
	(*MemberStatusReq)(nil),                    // 17: company.MemberStatusReq
	(*SalaryIncrementofEmployeeReq)(nil),       // 18: company.SalaryIncrementofEmployeeReq
	(*SalaryIncrementofRoleReq)(nil),           // 19: company.SalaryIncrementofRoleReq
	(*GetAverageSalaryperRoleReq)(nil),         // 20: company.GetAverageSalaryperRoleReq
	(*GetAverageSalaryperRoleRes)(nil),         // 21: company.GetAverageSalaryperRoleRes
	(*GetSalaryLeaderboardReq)(nil),            // 22: company.GetSalaryLeaderboardReq
	(*GetSalaryLeaderboardRes)(nil),            // 23: company.GetSalaryLeaderboardRes
	(*RaiseProblemReq)(nil),                    // 24: company.RaiseProblemReq
	(*GetProblemsReq)(nil),                     // 25: company.GetProblemsReq
	(*GetProblemsRes)(nil),                     // 26: company.GetProblemsRes
	(*GetProfileViewsReq)(nil),                 // 27: company.GetProfileViewsReq
	(*GetProfileViewsRes)(nil),                 // 28: company.GetProfileViewsRes
	(*GetVisitorsReq)(nil),                     // 29: company.GetVisitorsReq
	(*GetVisitorsRes)(nil),                     // 30: company.GetVisitorsRes
	(*GetPermisssionReq)(nil),                  // 31: company.GetPermisssionReq
	(*GetPermisssionRes)(nil),                  // 32: company.GetPermisssionRes
	(*IsEmployeeExistsReq)(nil),                // 33: company.IsEmployeeExistsReq
	(*IsEmployeeExistsRes)(nil),                // 34: company.IsEmployeeExistsRes
	(*AddClientReq)(nil),                       // 35: company.AddClientReq
	(*AssociateClientWithProjectReq)(nil),      // 36: company.AssociateClientWithProjectReq
	(*GetClientsReq)(nil),                      // 37: company.GetClientsReq
	(*GetClientsRes)(nil),                      // 38: company.GetClientsRes
	(*GetProjectsReq)(nil),                     // 39: company.GetProjectsReq
	(*GetProjectsRes)(nil),                     // 40: company.GetProjectsRes
	(*GetRevenueGeneratedReq)(nil),             // 41: company.GetRevenueGeneratedReq
	(*GetRevenueGeneratedRes)(nil),             // 42: company.GetRevenueGeneratedRes
	(*UpdateRevenueStatusReq)(nil),             // 43: company.UpdateRevenueStatusReq
	(*AttachCompanyPoliciesReq)(nil),           // 44: company.AttachCompanyPoliciesReq
	(*UpdatePaymentStatusofEmployeeReq)(nil),   // 45: company.UpdatePaymentStatusofEmployeeReq
	(*AssignProblemReq)(nil),                   // 46: company.AssignProblemReq
	(*ResolveProblemReq)(nil),                  // 47: company.ResolveProblemReq
	(*ApplyForLeaveReq)(nil),                   // 48: company.ApplyForLeaveReq
	(*GetEmployeeLeaveRequestsReq)(nil),        // 49: company.GetEmployeeLeaveRequestsReq
	(*GetEmployeeLeaveRequestsRes)(nil),        // 50: company.GetEmployeeLeaveRequestsRes
	(*DecideEmployeeLeaveRequest)(nil),         // 51: company.DecideEmployeeLeaveRequest
	(*GetLeavesReq)(nil),                       // 52: company.GetLeavesReq
	(*GetLeavesRes)(nil),                       // 53: company.GetLeavesRes
	(*GetStreamofClientsReq)(nil),              // 54: company.GetStreamofClientsReq
	(*GetStreamofClientsRes)(nil),              // 55: company.GetStreamofClientsRes
	(*PostJobsReq)(nil),                        // 56: company.PostJobsReq
	(*GetJobsofCompanyReq)(nil),                // 57: company.GetJobsofCompanyReq
	(*GetJobsofCompanyRes)(nil),                // 58: company.GetJobsofCompanyRes
	(*GetJobApplicationsReq)(nil),              // 59: company.GetJobApplicationsReq
	(*GetJobApplicationsRes)(nil),              // 60: company.GetJobApplicationsRes
	(*ShortlistApplicationsReq)(nil),           // 61: company.ShortlistApplicationsReq
	(*GetShortlistedApplicationsReq)(nil),      // 62: company.GetShortlistedApplicationsReq
	(*GetShortlistedApplicationsRes)(nil),      // 63: company.GetShortlistedApplicationsRes
	(*GetJobsReq)(nil),                         // 64: company.GetJobsReq
	(*GetJobsRes)(nil),                         // 65: company.GetJobsRes
	(*GetAllJobApplicationsofUserReq)(nil),     // 66: company.GetAllJobApplicationsofUserReq
	(*GetAllJobApplicationsofUserRes)(nil),     // 67: company.GetAllJobApplicationsofUserRes
	(*ScheduleInterviewReq)(nil),               // 68: company.ScheduleInterviewReq
	(*GetScheduledInterviewsReq)(nil),          // 69: company.GetScheduledInterviewsReq
	(*GetScheduledInterviewsRes)(nil),          // 70: company.GetScheduledInterviewsRes
	(*GetDetailsofApplicationByIDReq)(nil),     // 71: company.GetDetailsofApplicationByIDReq
	(*GetDetailsofApplicationByIDRes)(nil),     // 72: company.GetDetailsofApplicationByIDRes
	(*GetScheduledInterviewsofUserReq)(nil),    // 73: company.GetScheduledInterviewsofUserReq
	(*GetScheduledInterviewsofUserRes)(nil),    // 74: company.GetScheduledInterviewsofUserRes
	(*RescheduleInterviewReq)(nil),             // 75: company.RescheduleInterviewReq
	(*GetAssignedProblemsReq)(nil),             // 76: company.GetAssignedProblemsReq
	(*GetAssignedProblemsRes)(nil),             // 77: company.GetAssignedProblemsRes
	(*timestamp.Timestamp)(nil),                // 78: google.protobuf.Timestamp
	(*empty.Empty)(nil),                        // 79: google.protobuf.Empty
}
var file_company_proto_depIdxs = []int32{
	0,  // 0: company.RegisterCompanyRequest.Address:type_name -> company.Address
	0,  // 1: company.CompanyResponce.Address:type_name -> company.Address
	13, // 2: company.GetCompanyDetailsRes.MembersDetails:type_name -> company.GetCompanyEmployeesRes
	78, // 3: company.GetProfileViewsReq.From:type_name -> google.protobuf.Timestamp
	78, // 4: company.GetProfileViewsReq.To:type_name -> google.protobuf.Timestamp
	78, // 5: company.GetVisitorsReq.From:type_name -> google.protobuf.Timestamp
	78, // 6: company.GetVisitorsReq.To:type_name -> google.protobuf.Timestamp
	78, // 7: company.GetVisitorsRes.VisitedTime:type_name -> google.protobuf.Timestamp
	0,  // 8: company.PostJobsReq.JobLocation:type_name -> company.Address
	0,  // 9: company.GetJobsofCompanyRes.JobLocation:type_name -> company.Address
	0,  // 10: company.GetJobApplicationsRes.AddressofApplicant:type_name -> company.Address
	0,  // 11: company.GetShortlistedApplicationsRes.AddressofApplicant:type_name -> company.Address
	0,  // 12: company.GetJobsRes.JobLocation:type_name -> company.Address
	0,  // 13: company.GetDetailsofApplicationByIDRes.AddressofApplicant:type_name -> company.Address
	1,  // 14: company.CompanyService.RegisterCompany:input_type -> company.RegisterCompanyRequest
	79, // 15: company.CompanyService.GetCompanyTypes:input_type -> google.protobuf.Empty
	79, // 16: company.CompanyService.GetPermissions:input_type -> google.protobuf.Empty
	5,  // 17: company.CompanyService.AddEmployees:input_type -> company.AddEmployeeReq
	6,  // 18: company.CompanyService.AttachRoleWithPermisssions:input_type -> company.AttachRoleWithPermisssionsReq
	7,  // 19: company.CompanyService.GetAttachedRoleswithPermissions:input_type -> company.GetAttachedRoleswithPermissionsReq
	9,  // 20: company.CompanyService.AddCompanyTypes:input_type -> company.AddCompanyTypeReq
	10, // 21: company.CompanyService.Permissions:input_type -> company.AddPermissionReq
	11, // 22: company.CompanyService.GetCompanyDetails:input_type -> company.GetCompanyReq
	11, // 23: company.CompanyService.GetCompanyEmployees:input_type -> company.GetCompanyReq
	14, // 24: company.CompanyService.LogintoCompany:input_type -> company.LogintoCompanyReq
	17, // 25: company.CompanyService.AddMemberStatus:input_type -> company.MemberStatusReq
	18, // 26: company.CompanyService.SalaryIncrementofEmployee:input_type -> company.SalaryIncrementofEmployeeReq
	19, // 27: company.CompanyService.SalaryIncrementofRole:input_type -> company.SalaryIncrementofRoleReq
	20, // 28: company.CompanyService.GetAverageSalaryperRole:input_type -> company.GetAverageSalaryperRoleReq
	22, // 29: company.CompanyService.GetSalaryLeaderboard:input_type -> company.GetSalaryLeaderboardReq
	24, // 30: company.CompanyService.RaiseProblem:input_type -> company.RaiseProblemReq
	25, // 31: company.CompanyService.GetProblems:input_type -> company.GetProblemsReq
	27, // 32: company.CompanyService.GetProfileViews:input_type -> company.GetProfileViewsReq
	29, // 33: company.CompanyService.GetVisitors:input_type -> company.GetVisitorsReq
	31, // 34: company.CompanyService.GetPermission:input_type -> company.GetPermisssionReq
	33, // 35: company.CompanyService.IsEmployeeExists:input_type -> company.IsEmployeeExistsReq
	35, // 36: company.CompanyService.AddClient:input_type -> company.AddClientReq
	36, // 37: company.CompanyService.AssociateClientWithProject:input_type -> company.AssociateClientWithProjectReq
	39, // 38: company.CompanyService.GetPastProjects:input_type -> company.GetProjectsReq
	37, // 39: company.CompanyService.GetClients:input_type -> company.GetClientsReq
	41, // 40: company.CompanyService.GetRevenueGenerated:input_type -> company.GetRevenueGeneratedReq
	43, // 41: company.CompanyService.UpdateRevenueStatus:input_type -> company.UpdateRevenueStatusReq
	44, // 42: company.CompanyService.AttachCompanyPolicies:input_type -> company.AttachCompanyPoliciesReq
	45, // 43: company.CompanyService.UpdatePaymentStatusofEmployee:input_type -> company.UpdatePaymentStatusofEmployeeReq
	46, // 44: company.CompanyService.AssignProblem:input_type -> company.AssignProblemReq
	47, // 45: company.CompanyService.ResolveProblem:input_type -> company.ResolveProblemReq
	48, // 46: company.CompanyService.ApplyForLeave:input_type -> company.ApplyForLeaveReq
	49, // 47: company.CompanyService.GetEmployeeLeaveRequests:input_type -> company.GetEmployeeLeaveRequestsReq
	51, // 48: company.CompanyService.DecideEmployeeLeave:input_type -> company.DecideEmployeeLeaveRequest
	52, // 49: company.CompanyService.GetLeaves:input_type -> company.GetLeavesReq
	54, // 50: company.CompanyService.GetStreamofClients:input_type -> company.GetStreamofClientsReq
	56, // 51: company.CompanyService.PostJobs:input_type -> company.PostJobsReq
	57, // 52: company.CompanyService.GetJobsofCompany:input_type -> company.GetJobsofCompanyReq
	59, // 53: company.CompanyService.GetJobApplications:input_type -> company.GetJobApplicationsReq
	61, // 54: company.CompanyService.ShortlistApplications:input_type -> company.ShortlistApplicationsReq
	68, // 55: company.CompanyService.ScheduleInterview:input_type -> company.ScheduleInterviewReq
	69, // 56: company.CompanyService.GetScheduledInterviews:input_type -> company.GetScheduledInterviewsReq
	71, // 57: company.CompanyService.GetDetailsofApplicationByID:input_type -> company.GetDetailsofApplicationByIDReq
	73, // 58: company.CompanyService.GetScheduledInterviewsofUser:input_type -> company.GetScheduledInterviewsofUserReq
	75, // 59: company.CompanyService.RescheduleInterview:input_type -> company.RescheduleInterviewReq
	62, // 60: company.CompanyService.GetShortlistedApplications:input_type -> company.GetShortlistedApplicationsReq
	64, // 61: company.CompanyService.GetJobs:input_type -> company.GetJobsReq
	66, // 62: company.CompanyService.GetAllJobApplicationsofUser:input_type -> company.GetAllJobApplicationsofUserReq
	76, // 63: company.CompanyService.GetAssignedProblems:input_type -> company.GetAssignedProblemsReq
	3,  // 64: company.CompanyService.RegisterCompany:output_type -> company.CompanyResponce
	2,  // 65: company.CompanyService.GetCompanyTypes:output_type -> company.GetCompanyTypesRes
	4,  // 66: company.CompanyService.GetPermissions:output_type -> company.Permission
	79, // 67: company.CompanyService.AddEmployees:output_type -> google.protobuf.Empty
	79, // 68: company.CompanyService.AttachRoleWithPermisssions:output_type -> google.protobuf.Empty
	8,  // 69: company.CompanyService.GetAttachedRoleswithPermissions:output_type -> company.GetAttachedRoleswithPermissionsRes
	79, // 70: company.CompanyService.AddCompanyTypes:output_type -> google.protobuf.Empty
	79, // 71: company.CompanyService.Permissions:output_type -> google.protobuf.Empty
	12, // 72: company.CompanyService.GetCompanyDetails:output_type -> company.GetCompanyDetailsRes
	13, // 73: company.CompanyService.GetCompanyEmployees:output_type -> company.GetCompanyEmployeesRes
	15, // 74: company.CompanyService.LogintoCompany:output_type -> company.LogintoCompanyRes
	79, // 75: company.CompanyService.AddMemberStatus:output_type -> google.protobuf.Empty
	79, // 76: company.CompanyService.SalaryIncrementofEmployee:output_type -> google.protobuf.Empty
	79, // 77: company.CompanyService.SalaryIncrementofRole:output_type -> google.protobuf.Empty
	21, // 78: company.CompanyService.GetAverageSalaryperRole:output_type -> company.GetAverageSalaryperRoleRes
	23, // 79: company.CompanyService.GetSalaryLeaderboard:output_type -> company.GetSalaryLeaderboardRes
	79, // 80: company.CompanyService.RaiseProblem:output_type -> google.protobuf.Empty
	26, // 81: company.CompanyService.GetProblems:output_type -> company.GetProblemsRes
	28, // 82: company.CompanyService.GetProfileViews:output_type -> company.GetProfileViewsRes
	30, // 83: company.CompanyService.GetVisitors:output_type -> company.GetVisitorsRes
	32, // 84: company.CompanyService.GetPermission:output_type -> company.GetPermisssionRes
	34, // 85: company.CompanyService.IsEmployeeExists:output_type -> company.IsEmployeeExistsRes
	79, // 86: company.CompanyService.AddClient:output_type -> google.protobuf.Empty
	79, // 87: company.CompanyService.AssociateClientWithProject:output_type -> google.protobuf.Empty
	40, // 88: company.CompanyService.GetPastProjects:output_type -> company.GetProjectsRes
	38, // 89: company.CompanyService.GetClients:output_type -> company.GetClientsRes
	42, // 90: company.CompanyService.GetRevenueGenerated:output_type -> company.GetRevenueGeneratedRes
	79, // 91: company.CompanyService.UpdateRevenueStatus:output_type -> google.protobuf.Empty
	79, // 92: company.CompanyService.AttachCompanyPolicies:output_type -> google.protobuf.Empty
	79, // 93: company.CompanyService.UpdatePaymentStatusofEmployee:output_type -> google.protobuf.Empty
	79, // 94: company.CompanyService.AssignProblem:output_type -> google.protobuf.Empty
	79, // 95: company.CompanyService.ResolveProblem:output_type -> google.protobuf.Empty
	79, // 96: company.CompanyService.ApplyForLeave:output_type -> google.protobuf.Empty
	50, // 97: company.CompanyService.GetEmployeeLeaveRequests:output_type -> company.GetEmployeeLeaveRequestsRes
	79, // 98: company.CompanyService.DecideEmployeeLeave:output_type -> google.protobuf.Empty
	53, // 99: company.CompanyService.GetLeaves:output_type -> company.GetLeavesRes
	55, // 100: company.CompanyService.GetStreamofClients:output_type -> company.GetStreamofClientsRes
	79, // 101: company.CompanyService.PostJobs:output_type -> google.protobuf.Empty
	58, // 102: company.CompanyService.GetJobsofCompany:output_type -> company.GetJobsofCompanyRes
	60, // 103: company.CompanyService.GetJobApplications:output_type -> company.GetJobApplicationsRes
	79, // 104: company.CompanyService.ShortlistApplications:output_type -> google.protobuf.Empty
	79, // 105: company.CompanyService.ScheduleInterview:output_type -> google.protobuf.Empty
	70, // 106: company.CompanyService.GetScheduledInterviews:output_type -> company.GetScheduledInterviewsRes
	72, // 107: company.CompanyService.GetDetailsofApplicationByID:output_type -> company.GetDetailsofApplicationByIDRes
	74, // 108: company.CompanyService.GetScheduledInterviewsofUser:output_type -> company.GetScheduledInterviewsofUserRes
	79, // 109: company.CompanyService.RescheduleInterview:output_type -> google.protobuf.Empty
	63, // 110: company.CompanyService.GetShortlistedApplications:output_type -> company.GetShortlistedApplicationsRes
	65, // 111: company.CompanyService.GetJobs:output_type -> company.GetJobsRes
	67, // 112: company.CompanyService.GetAllJobApplicationsofUser:output_type -> company.GetAllJobApplicationsofUserRes
	77, // 113: company.CompanyService.GetAssignedProblems:output_type -> company.GetAssignedProblemsRes
	64, // [64:114] is the sub-list for method output_type
	14, // [14:64] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_company_proto_init() }
func file_company_proto_init() {
	if File_company_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_company_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyTypesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyResponce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEmployeeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachRoleWithPermisssionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedRoleswithPermissionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachedRoleswithPermissionsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCompanyTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyDetailsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyEmployeesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogintoCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogintoCompanyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalaryIncrementofEmployeeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalaryIncrementofRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAverageSalaryperRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAverageSalaryperRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalaryLeaderboardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalaryLeaderboardRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaiseProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProblemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProblemsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileViewsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileViewsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisitorsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVisitorsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermisssionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermisssionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsEmployeeExistsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsEmployeeExistsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddClientReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssociateClientWithProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRevenueGeneratedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRevenueGeneratedRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRevenueStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachCompanyPoliciesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentStatusofEmployeeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyForLeaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmployeeLeaveRequestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmployeeLeaveRequestsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecideEmployeeLeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeavesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeavesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamofClientsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamofClientsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostJobsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsofCompanyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsofCompanyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobApplicationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobApplicationsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortlistApplicationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortlistedApplicationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShortlistedApplicationsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllJobApplicationsofUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllJobApplicationsofUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleInterviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduledInterviewsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduledInterviewsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailsofApplicationByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDetailsofApplicationByIDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduledInterviewsofUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduledInterviewsofUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RescheduleInterviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedProblemsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_company_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedProblemsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_company_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   78,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_company_proto_goTypes,
		DependencyIndexes: file_company_proto_depIdxs,
		MessageInfos:      file_company_proto_msgTypes,
	}.Build()
	File_company_proto = out.File
	file_company_proto_rawDesc = nil
	file_company_proto_goTypes = nil
	file_company_proto_depIdxs = nil
}
