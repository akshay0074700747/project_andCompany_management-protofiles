// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: project.proto

package projectpb

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Description     string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	ProjectUsername string `protobuf:"bytes,3,opt,name=ProjectUsername,proto3" json:"ProjectUsername,omitempty"`
	Aim             string `protobuf:"bytes,4,opt,name=Aim,proto3" json:"Aim,omitempty"`
	IsCompanybased  bool   `protobuf:"varint,5,opt,name=IsCompanybased,proto3" json:"IsCompanybased,omitempty"`
	ComapanyId      string `protobuf:"bytes,6,opt,name=ComapanyId,proto3" json:"ComapanyId,omitempty"`
	OwnerID         string `protobuf:"bytes,7,opt,name=OwnerID,proto3" json:"OwnerID,omitempty"`
	IsPublic        bool   `protobuf:"varint,8,opt,name=IsPublic,proto3" json:"IsPublic,omitempty"`
	Deadline        string `protobuf:"bytes,9,opt,name=Deadline,proto3" json:"Deadline,omitempty"`
}

func (x *CreateProjectReq) Reset() {
	*x = CreateProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectReq) ProtoMessage() {}

func (x *CreateProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectReq.ProtoReflect.Descriptor instead.
func (*CreateProjectReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{0}
}

func (x *CreateProjectReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProjectReq) GetProjectUsername() string {
	if x != nil {
		return x.ProjectUsername
	}
	return ""
}

func (x *CreateProjectReq) GetAim() string {
	if x != nil {
		return x.Aim
	}
	return ""
}

func (x *CreateProjectReq) GetIsCompanybased() bool {
	if x != nil {
		return x.IsCompanybased
	}
	return false
}

func (x *CreateProjectReq) GetComapanyId() string {
	if x != nil {
		return x.ComapanyId
	}
	return ""
}

func (x *CreateProjectReq) GetOwnerID() string {
	if x != nil {
		return x.OwnerID
	}
	return ""
}

func (x *CreateProjectReq) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *CreateProjectReq) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

type CreateProjectRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID       string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description     string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	ProjectUsername string `protobuf:"bytes,4,opt,name=ProjectUsername,proto3" json:"ProjectUsername,omitempty"`
	Aim             string `protobuf:"bytes,5,opt,name=Aim,proto3" json:"Aim,omitempty"`
	IsCompanybased  bool   `protobuf:"varint,6,opt,name=IsCompanybased,proto3" json:"IsCompanybased,omitempty"`
	ComapanyID      string `protobuf:"bytes,7,opt,name=ComapanyID,proto3" json:"ComapanyID,omitempty"`
	Deadline        string `protobuf:"bytes,8,opt,name=Deadline,proto3" json:"Deadline,omitempty"`
}

func (x *CreateProjectRes) Reset() {
	*x = CreateProjectRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRes) ProtoMessage() {}

func (x *CreateProjectRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRes.ProtoReflect.Descriptor instead.
func (*CreateProjectRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProjectRes) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *CreateProjectRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProjectRes) GetProjectUsername() string {
	if x != nil {
		return x.ProjectUsername
	}
	return ""
}

func (x *CreateProjectRes) GetAim() string {
	if x != nil {
		return x.Aim
	}
	return ""
}

func (x *CreateProjectRes) GetIsCompanybased() bool {
	if x != nil {
		return x.IsCompanybased
	}
	return false
}

func (x *CreateProjectRes) GetComapanyID() string {
	if x != nil {
		return x.ComapanyID
	}
	return ""
}

func (x *CreateProjectRes) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

type AddMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email        string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	PermissionID uint32 `protobuf:"varint,2,opt,name=PermissionID,proto3" json:"PermissionID,omitempty"`
	RoleID       uint32 `protobuf:"varint,3,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	ProjectID    string `protobuf:"bytes,4,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *AddMemberReq) Reset() {
	*x = AddMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberReq) ProtoMessage() {}

func (x *AddMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberReq.ProtoReflect.Descriptor instead.
func (*AddMemberReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{2}
}

func (x *AddMemberReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddMemberReq) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *AddMemberReq) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *AddMemberReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type ProjectInvitesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberID string `protobuf:"bytes,1,opt,name=memberID,proto3" json:"memberID,omitempty"`
}

func (x *ProjectInvitesReq) Reset() {
	*x = ProjectInvitesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInvitesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInvitesReq) ProtoMessage() {}

func (x *ProjectInvitesReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInvitesReq.ProtoReflect.Descriptor instead.
func (*ProjectInvitesReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectInvitesReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type ProjectInvitesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	Members   uint32 `protobuf:"varint,2,opt,name=Members,proto3" json:"Members,omitempty"`
}

func (x *ProjectInvitesRes) Reset() {
	*x = ProjectInvitesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInvitesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInvitesRes) ProtoMessage() {}

func (x *ProjectInvitesRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInvitesRes.ProtoReflect.Descriptor instead.
func (*ProjectInvitesRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectInvitesRes) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *ProjectInvitesRes) GetMembers() uint32 {
	if x != nil {
		return x.Members
	}
	return 0
}

type AcceptProjectInviteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	Accept    bool   `protobuf:"varint,2,opt,name=Accept,proto3" json:"Accept,omitempty"`
	UserID    string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *AcceptProjectInviteReq) Reset() {
	*x = AcceptProjectInviteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptProjectInviteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptProjectInviteReq) ProtoMessage() {}

func (x *AcceptProjectInviteReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptProjectInviteReq.ProtoReflect.Descriptor instead.
func (*AcceptProjectInviteReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptProjectInviteReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *AcceptProjectInviteReq) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

func (x *AcceptProjectInviteReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID       string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	ProjectUsername string `protobuf:"bytes,2,opt,name=ProjectUsername,proto3" json:"ProjectUsername,omitempty"`
}

func (x *GetProjectReq) Reset() {
	*x = GetProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectReq) ProtoMessage() {}

func (x *GetProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectReq.ProtoReflect.Descriptor instead.
func (*GetProjectReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{6}
}

func (x *GetProjectReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetProjectReq) GetProjectUsername() string {
	if x != nil {
		return x.ProjectUsername
	}
	return ""
}

type GetProjectMembersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Email        string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Role         string `protobuf:"bytes,4,opt,name=Role,proto3" json:"Role,omitempty"`
	PermissionID uint32 `protobuf:"varint,5,opt,name=PermissionID,proto3" json:"PermissionID,omitempty"`
}

func (x *GetProjectMembersRes) Reset() {
	*x = GetProjectMembersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectMembersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectMembersRes) ProtoMessage() {}

func (x *GetProjectMembersRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectMembersRes.ProtoReflect.Descriptor instead.
func (*GetProjectMembersRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{7}
}

func (x *GetProjectMembersRes) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetProjectMembersRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetProjectMembersRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProjectMembersRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GetProjectMembersRes) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

type GetProjectDetailesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID         string                  `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	ProjectUsername   string                  `protobuf:"bytes,2,opt,name=ProjectUsername,proto3" json:"ProjectUsername,omitempty"`
	Aim               string                  `protobuf:"bytes,3,opt,name=Aim,proto3" json:"Aim,omitempty"`
	Members           uint32                  `protobuf:"varint,4,opt,name=Members,proto3" json:"Members,omitempty"`
	MembersDetails    []*GetProjectMembersRes `protobuf:"bytes,5,rep,name=MembersDetails,proto3" json:"MembersDetails,omitempty"`
	MembersTerminated uint32                  `protobuf:"varint,6,opt,name=MembersTerminated,proto3" json:"MembersTerminated,omitempty"`
	IssuesRaised      uint32                  `protobuf:"varint,7,opt,name=IssuesRaised,proto3" json:"IssuesRaised,omitempty"`
	WorkflowsRunning  uint32                  `protobuf:"varint,8,opt,name=WorkflowsRunning,proto3" json:"WorkflowsRunning,omitempty"`
	IssuesPending     uint32                  `protobuf:"varint,9,opt,name=IssuesPending,proto3" json:"IssuesPending,omitempty"`
}

func (x *GetProjectDetailesRes) Reset() {
	*x = GetProjectDetailesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectDetailesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectDetailesRes) ProtoMessage() {}

func (x *GetProjectDetailesRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectDetailesRes.ProtoReflect.Descriptor instead.
func (*GetProjectDetailesRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{8}
}

func (x *GetProjectDetailesRes) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetProjectDetailesRes) GetProjectUsername() string {
	if x != nil {
		return x.ProjectUsername
	}
	return ""
}

func (x *GetProjectDetailesRes) GetAim() string {
	if x != nil {
		return x.Aim
	}
	return ""
}

func (x *GetProjectDetailesRes) GetMembers() uint32 {
	if x != nil {
		return x.Members
	}
	return 0
}

func (x *GetProjectDetailesRes) GetMembersDetails() []*GetProjectMembersRes {
	if x != nil {
		return x.MembersDetails
	}
	return nil
}

func (x *GetProjectDetailesRes) GetMembersTerminated() uint32 {
	if x != nil {
		return x.MembersTerminated
	}
	return 0
}

func (x *GetProjectDetailesRes) GetIssuesRaised() uint32 {
	if x != nil {
		return x.IssuesRaised
	}
	return 0
}

func (x *GetProjectDetailesRes) GetWorkflowsRunning() uint32 {
	if x != nil {
		return x.WorkflowsRunning
	}
	return 0
}

func (x *GetProjectDetailesRes) GetIssuesPending() uint32 {
	if x != nil {
		return x.IssuesPending
	}
	return 0
}

type LogintoProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectUsername string `protobuf:"bytes,1,opt,name=ProjectUsername,proto3" json:"ProjectUsername,omitempty"`
	MemberID        string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
}

func (x *LogintoProjectReq) Reset() {
	*x = LogintoProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogintoProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogintoProjectReq) ProtoMessage() {}

func (x *LogintoProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogintoProjectReq.ProtoReflect.Descriptor instead.
func (*LogintoProjectReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{9}
}

func (x *LogintoProjectReq) GetProjectUsername() string {
	if x != nil {
		return x.ProjectUsername
	}
	return ""
}

func (x *LogintoProjectReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type LogintoProjectRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID  string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	Permission string `protobuf:"bytes,2,opt,name=Permission,proto3" json:"Permission,omitempty"`
	Role       string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *LogintoProjectRes) Reset() {
	*x = LogintoProjectRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogintoProjectRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogintoProjectRes) ProtoMessage() {}

func (x *LogintoProjectRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogintoProjectRes.ProtoReflect.Descriptor instead.
func (*LogintoProjectRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{10}
}

func (x *LogintoProjectRes) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *LogintoProjectRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *LogintoProjectRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type MemberStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *MemberStatusReq) Reset() {
	*x = MemberStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStatusReq) ProtoMessage() {}

func (x *MemberStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStatusReq.ProtoReflect.Descriptor instead.
func (*MemberStatusReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{11}
}

func (x *MemberStatusReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetAssignedTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProjectID string `protobuf:"bytes,2,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetAssignedTaskReq) Reset() {
	*x = GetAssignedTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedTaskReq) ProtoMessage() {}

func (x *GetAssignedTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedTaskReq.ProtoReflect.Descriptor instead.
func (*GetAssignedTaskReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{12}
}

func (x *GetAssignedTaskReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetAssignedTaskReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetAssignedTaskRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task        string               `protobuf:"bytes,1,opt,name=Task,proto3" json:"Task,omitempty"`
	Description string               `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	TaskFileID  string               `protobuf:"bytes,3,opt,name=TaskFileID,proto3" json:"TaskFileID,omitempty"`
	Stages      uint32               `protobuf:"varint,4,opt,name=Stages,proto3" json:"Stages,omitempty"`
	Deadline    *timestamp.Timestamp `protobuf:"bytes,5,opt,name=Deadline,proto3" json:"Deadline,omitempty"`
}

func (x *GetAssignedTaskRes) Reset() {
	*x = GetAssignedTaskRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAssignedTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssignedTaskRes) ProtoMessage() {}

func (x *GetAssignedTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssignedTaskRes.ProtoReflect.Descriptor instead.
func (*GetAssignedTaskRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{13}
}

func (x *GetAssignedTaskRes) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *GetAssignedTaskRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetAssignedTaskRes) GetTaskFileID() string {
	if x != nil {
		return x.TaskFileID
	}
	return ""
}

func (x *GetAssignedTaskRes) GetStages() uint32 {
	if x != nil {
		return x.Stages
	}
	return 0
}

func (x *GetAssignedTaskRes) GetDeadline() *timestamp.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

type DownloadTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProjectID  string `protobuf:"bytes,2,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	TaskFileID string `protobuf:"bytes,3,opt,name=TaskFileID,proto3" json:"TaskFileID,omitempty"`
}

func (x *DownloadTaskReq) Reset() {
	*x = DownloadTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadTaskReq) ProtoMessage() {}

func (x *DownloadTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadTaskReq.ProtoReflect.Descriptor instead.
func (*DownloadTaskReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{14}
}

func (x *DownloadTaskReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DownloadTaskReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *DownloadTaskReq) GetTaskFileID() string {
	if x != nil {
		return x.TaskFileID
	}
	return ""
}

type DownloadTaskRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File []byte `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
}

func (x *DownloadTaskRes) Reset() {
	*x = DownloadTaskRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadTaskRes) ProtoMessage() {}

func (x *DownloadTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadTaskRes.ProtoReflect.Descriptor instead.
func (*DownloadTaskRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{15}
}

func (x *DownloadTaskRes) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type GetProgressofMembersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetProgressofMembersReq) Reset() {
	*x = GetProgressofMembersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgressofMembersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgressofMembersReq) ProtoMessage() {}

func (x *GetProgressofMembersReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgressofMembersReq.ProtoReflect.Descriptor instead.
func (*GetProgressofMembersReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{16}
}

func (x *GetProgressofMembersReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetProgressofMembersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberID     string `protobuf:"bytes,1,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	Email        string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	TaskDeadline string `protobuf:"bytes,4,opt,name=TaskDeadline,proto3" json:"TaskDeadline,omitempty"`
	Progress     string `protobuf:"bytes,5,opt,name=Progress,proto3" json:"Progress,omitempty"`
	TaskStatus   string `protobuf:"bytes,6,opt,name=TaskStatus,proto3" json:"TaskStatus,omitempty"`
	Role         string `protobuf:"bytes,7,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *GetProgressofMembersRes) Reset() {
	*x = GetProgressofMembersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgressofMembersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgressofMembersRes) ProtoMessage() {}

func (x *GetProgressofMembersRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgressofMembersRes.ProtoReflect.Descriptor instead.
func (*GetProgressofMembersRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{17}
}

func (x *GetProgressofMembersRes) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *GetProgressofMembersRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetProgressofMembersRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProgressofMembersRes) GetTaskDeadline() string {
	if x != nil {
		return x.TaskDeadline
	}
	return ""
}

func (x *GetProgressofMembersRes) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

func (x *GetProgressofMembersRes) GetTaskStatus() string {
	if x != nil {
		return x.TaskStatus
	}
	return ""
}

func (x *GetProgressofMembersRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type GetProgressofMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberID       string         `protobuf:"bytes,1,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	Email          string         `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Name           string         `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	TaskDeadline   string         `protobuf:"bytes,4,opt,name=TaskDeadline,proto3" json:"TaskDeadline,omitempty"`
	TasksCompleted uint32         `protobuf:"varint,5,opt,name=TasksCompleted,proto3" json:"TasksCompleted,omitempty"`
	TasksLeft      uint32         `protobuf:"varint,6,opt,name=TasksLeft,proto3" json:"TasksLeft,omitempty"`
	Progress       string         `protobuf:"bytes,7,opt,name=Progress,proto3" json:"Progress,omitempty"`
	Details        []*TaskDetails `protobuf:"bytes,8,rep,name=Details,proto3" json:"Details,omitempty"`
	Role           string         `protobuf:"bytes,9,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *GetProgressofMemberRes) Reset() {
	*x = GetProgressofMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgressofMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgressofMemberRes) ProtoMessage() {}

func (x *GetProgressofMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgressofMemberRes.ProtoReflect.Descriptor instead.
func (*GetProgressofMemberRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{18}
}

func (x *GetProgressofMemberRes) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *GetProgressofMemberRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetProgressofMemberRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProgressofMemberRes) GetTaskDeadline() string {
	if x != nil {
		return x.TaskDeadline
	}
	return ""
}

func (x *GetProgressofMemberRes) GetTasksCompleted() uint32 {
	if x != nil {
		return x.TasksCompleted
	}
	return 0
}

func (x *GetProgressofMemberRes) GetTasksLeft() uint32 {
	if x != nil {
		return x.TasksLeft
	}
	return 0
}

func (x *GetProgressofMemberRes) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

func (x *GetProgressofMemberRes) GetDetails() []*TaskDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *GetProgressofMemberRes) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type TaskDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key              string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Description      string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	FileSnapshotName string `protobuf:"bytes,3,opt,name=FileSnapshotName,proto3" json:"FileSnapshotName,omitempty"`
}

func (x *TaskDetails) Reset() {
	*x = TaskDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDetails) ProtoMessage() {}

func (x *TaskDetails) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDetails.ProtoReflect.Descriptor instead.
func (*TaskDetails) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{19}
}

func (x *TaskDetails) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TaskDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskDetails) GetFileSnapshotName() string {
	if x != nil {
		return x.FileSnapshotName
	}
	return ""
}

type GetProgressofMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID  string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
}

func (x *GetProgressofMemberReq) Reset() {
	*x = GetProgressofMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgressofMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgressofMemberReq) ProtoMessage() {}

func (x *GetProgressofMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgressofMemberReq.ProtoReflect.Descriptor instead.
func (*GetProgressofMemberReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{20}
}

func (x *GetProgressofMemberReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetProgressofMemberReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type MarkProgressofNonTechnicalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID     string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID      string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	CompletedTask string `protobuf:"bytes,3,opt,name=CompletedTask,proto3" json:"CompletedTask,omitempty"`
	Description   string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *MarkProgressofNonTechnicalReq) Reset() {
	*x = MarkProgressofNonTechnicalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkProgressofNonTechnicalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkProgressofNonTechnicalReq) ProtoMessage() {}

func (x *MarkProgressofNonTechnicalReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkProgressofNonTechnicalReq.ProtoReflect.Descriptor instead.
func (*MarkProgressofNonTechnicalReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{21}
}

func (x *MarkProgressofNonTechnicalReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *MarkProgressofNonTechnicalReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *MarkProgressofNonTechnicalReq) GetCompletedTask() string {
	if x != nil {
		return x.CompletedTask
	}
	return ""
}

func (x *MarkProgressofNonTechnicalReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetProjectProgressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetProjectProgressReq) Reset() {
	*x = GetProjectProgressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectProgressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectProgressReq) ProtoMessage() {}

func (x *GetProjectProgressReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectProgressReq.ProtoReflect.Descriptor instead.
func (*GetProjectProgressReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{22}
}

func (x *GetProjectProgressReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetProjectProgressRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID            string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	Progress             string `protobuf:"bytes,2,opt,name=Progress,proto3" json:"Progress,omitempty"`
	Deadline             string `protobuf:"bytes,3,opt,name=Deadline,proto3" json:"Deadline,omitempty"`
	LiveMembers          uint32 `protobuf:"varint,4,opt,name=LiveMembers,proto3" json:"LiveMembers,omitempty"`
	TaskCompletedMembers uint32 `protobuf:"varint,5,opt,name=TaskCompletedMembers,proto3" json:"TaskCompletedMembers,omitempty"`
	TaskCriticalMembers  uint32 `protobuf:"varint,6,opt,name=TaskCriticalMembers,proto3" json:"TaskCriticalMembers,omitempty"`
}

func (x *GetProjectProgressRes) Reset() {
	*x = GetProjectProgressRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectProgressRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectProgressRes) ProtoMessage() {}

func (x *GetProjectProgressRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectProgressRes.ProtoReflect.Descriptor instead.
func (*GetProjectProgressRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{23}
}

func (x *GetProjectProgressRes) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetProjectProgressRes) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

func (x *GetProjectProgressRes) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

func (x *GetProjectProgressRes) GetLiveMembers() uint32 {
	if x != nil {
		return x.LiveMembers
	}
	return 0
}

func (x *GetProjectProgressRes) GetTaskCompletedMembers() uint32 {
	if x != nil {
		return x.TaskCompletedMembers
	}
	return 0
}

func (x *GetProjectProgressRes) GetTaskCriticalMembers() uint32 {
	if x != nil {
		return x.TaskCriticalMembers
	}
	return 0
}

type AddTaskStatusesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Below  uint32 `protobuf:"varint,2,opt,name=Below,proto3" json:"Below,omitempty"`
}

func (x *AddTaskStatusesReq) Reset() {
	*x = AddTaskStatusesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTaskStatusesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskStatusesReq) ProtoMessage() {}

func (x *AddTaskStatusesReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskStatusesReq.ProtoReflect.Descriptor instead.
func (*AddTaskStatusesReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{24}
}

func (x *AddTaskStatusesReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddTaskStatusesReq) GetBelow() uint32 {
	if x != nil {
		return x.Below
	}
	return 0
}

type GetLiveProjectsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID string `protobuf:"bytes,1,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
}

func (x *GetLiveProjectsReq) Reset() {
	*x = GetLiveProjectsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveProjectsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveProjectsReq) ProtoMessage() {}

func (x *GetLiveProjectsReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveProjectsReq.ProtoReflect.Descriptor instead.
func (*GetLiveProjectsReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{25}
}

func (x *GetLiveProjectsReq) GetCompanyID() string {
	if x != nil {
		return x.CompanyID
	}
	return ""
}

type GetLiveProjectsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID          string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	ProjectUsername    string `protobuf:"bytes,2,opt,name=ProjectUsername,proto3" json:"ProjectUsername,omitempty"`
	ProjectDescription string `protobuf:"bytes,3,opt,name=ProjectDescription,proto3" json:"ProjectDescription,omitempty"`
	MembersWorking     uint32 `protobuf:"varint,4,opt,name=MembersWorking,proto3" json:"MembersWorking,omitempty"`
	Progress           uint32 `protobuf:"varint,5,opt,name=Progress,proto3" json:"Progress,omitempty"`
	Version            string `protobuf:"bytes,6,opt,name=Version,proto3" json:"Version,omitempty"`
	ClientID           string `protobuf:"bytes,7,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
}

func (x *GetLiveProjectsRes) Reset() {
	*x = GetLiveProjectsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveProjectsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveProjectsRes) ProtoMessage() {}

func (x *GetLiveProjectsRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveProjectsRes.ProtoReflect.Descriptor instead.
func (*GetLiveProjectsRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{26}
}

func (x *GetLiveProjectsRes) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetLiveProjectsRes) GetProjectUsername() string {
	if x != nil {
		return x.ProjectUsername
	}
	return ""
}

func (x *GetLiveProjectsRes) GetProjectDescription() string {
	if x != nil {
		return x.ProjectDescription
	}
	return ""
}

func (x *GetLiveProjectsRes) GetMembersWorking() uint32 {
	if x != nil {
		return x.MembersWorking
	}
	return 0
}

func (x *GetLiveProjectsRes) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *GetLiveProjectsRes) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetLiveProjectsRes) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

type IsMemberAcceptedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProjectID string `protobuf:"bytes,2,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *IsMemberAcceptedReq) Reset() {
	*x = IsMemberAcceptedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsMemberAcceptedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsMemberAcceptedReq) ProtoMessage() {}

func (x *IsMemberAcceptedReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsMemberAcceptedReq.ProtoReflect.Descriptor instead.
func (*IsMemberAcceptedReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{27}
}

func (x *IsMemberAcceptedReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *IsMemberAcceptedReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetStreamofProjectDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetStreamofProjectDetailsReq) Reset() {
	*x = GetStreamofProjectDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamofProjectDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamofProjectDetailsReq) ProtoMessage() {}

func (x *GetStreamofProjectDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamofProjectDetailsReq.ProtoReflect.Descriptor instead.
func (*GetStreamofProjectDetailsReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{28}
}

func (x *GetStreamofProjectDetailsReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetStreamofProjectDetailsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID       string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description     string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	ProjectUsername string `protobuf:"bytes,4,opt,name=ProjectUsername,proto3" json:"ProjectUsername,omitempty"`
}

func (x *GetStreamofProjectDetailsRes) Reset() {
	*x = GetStreamofProjectDetailsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamofProjectDetailsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamofProjectDetailsRes) ProtoMessage() {}

func (x *GetStreamofProjectDetailsRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamofProjectDetailsRes.ProtoReflect.Descriptor instead.
func (*GetStreamofProjectDetailsRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{29}
}

func (x *GetStreamofProjectDetailsRes) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetStreamofProjectDetailsRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetStreamofProjectDetailsRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetStreamofProjectDetailsRes) GetProjectUsername() string {
	if x != nil {
		return x.ProjectUsername
	}
	return ""
}

type GetCompletedMembersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetCompletedMembersReq) Reset() {
	*x = GetCompletedMembersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompletedMembersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompletedMembersReq) ProtoMessage() {}

func (x *GetCompletedMembersReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompletedMembersReq.ProtoReflect.Descriptor instead.
func (*GetCompletedMembersReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{30}
}

func (x *GetCompletedMembersReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetCompletedMembersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Email      string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	IsVerified bool   `protobuf:"varint,4,opt,name=IsVerified,proto3" json:"IsVerified,omitempty"`
}

func (x *GetCompletedMembersRes) Reset() {
	*x = GetCompletedMembersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompletedMembersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompletedMembersRes) ProtoMessage() {}

func (x *GetCompletedMembersRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompletedMembersRes.ProtoReflect.Descriptor instead.
func (*GetCompletedMembersRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{31}
}

func (x *GetCompletedMembersRes) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetCompletedMembersRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetCompletedMembersRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCompletedMembersRes) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

type GetCriticalMembersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetCriticalMembersReq) Reset() {
	*x = GetCriticalMembersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCriticalMembersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCriticalMembersReq) ProtoMessage() {}

func (x *GetCriticalMembersReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCriticalMembersReq.ProtoReflect.Descriptor instead.
func (*GetCriticalMembersReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{32}
}

func (x *GetCriticalMembersReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetCriticalMembersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Email     string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Completed string `protobuf:"bytes,4,opt,name=Completed,proto3" json:"Completed,omitempty"`
}

func (x *GetCriticalMembersRes) Reset() {
	*x = GetCriticalMembersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCriticalMembersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCriticalMembersRes) ProtoMessage() {}

func (x *GetCriticalMembersRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCriticalMembersRes.ProtoReflect.Descriptor instead.
func (*GetCriticalMembersRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{33}
}

func (x *GetCriticalMembersRes) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetCriticalMembersRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetCriticalMembersRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCriticalMembersRes) GetCompleted() string {
	if x != nil {
		return x.Completed
	}
	return ""
}

type RaiseIssueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID    string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	RaiserID    string `protobuf:"bytes,4,opt,name=RaiserID,proto3" json:"RaiserID,omitempty"`
}

func (x *RaiseIssueReq) Reset() {
	*x = RaiseIssueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaiseIssueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaiseIssueReq) ProtoMessage() {}

func (x *RaiseIssueReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaiseIssueReq.ProtoReflect.Descriptor instead.
func (*RaiseIssueReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{34}
}

func (x *RaiseIssueReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *RaiseIssueReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *RaiseIssueReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RaiseIssueReq) GetRaiserID() string {
	if x != nil {
		return x.RaiserID
	}
	return ""
}

type GetIssuesofProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetIssuesofProjectReq) Reset() {
	*x = GetIssuesofProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuesofProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuesofProjectReq) ProtoMessage() {}

func (x *GetIssuesofProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuesofProjectReq.ProtoReflect.Descriptor instead.
func (*GetIssuesofProjectReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{35}
}

func (x *GetIssuesofProjectReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetIssuesofProjectRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberID    string `protobuf:"bytes,1,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	RaisedBy    string `protobuf:"bytes,4,opt,name=RaisedBy,proto3" json:"RaisedBy,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *GetIssuesofProjectRes) Reset() {
	*x = GetIssuesofProjectRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuesofProjectRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuesofProjectRes) ProtoMessage() {}

func (x *GetIssuesofProjectRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuesofProjectRes.ProtoReflect.Descriptor instead.
func (*GetIssuesofProjectRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{36}
}

func (x *GetIssuesofProjectRes) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *GetIssuesofProjectRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetIssuesofProjectRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetIssuesofProjectRes) GetRaisedBy() string {
	if x != nil {
		return x.RaisedBy
	}
	return ""
}

func (x *GetIssuesofProjectRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetIssuesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID  string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
}

func (x *GetIssuesReq) Reset() {
	*x = GetIssuesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuesReq) ProtoMessage() {}

func (x *GetIssuesReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuesReq.ProtoReflect.Descriptor instead.
func (*GetIssuesReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{37}
}

func (x *GetIssuesReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetIssuesReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type GetIssuesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RaisedBy    string `protobuf:"bytes,1,opt,name=RaisedBy,proto3" json:"RaisedBy,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *GetIssuesRes) Reset() {
	*x = GetIssuesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuesRes) ProtoMessage() {}

func (x *GetIssuesRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuesRes.ProtoReflect.Descriptor instead.
func (*GetIssuesRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{38}
}

func (x *GetIssuesRes) GetRaisedBy() string {
	if x != nil {
		return x.RaisedBy
	}
	return ""
}

func (x *GetIssuesRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RateTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string  `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID  string  `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	Rating    float32 `protobuf:"fixed32,3,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Feedback  string  `protobuf:"bytes,4,opt,name=Feedback,proto3" json:"Feedback,omitempty"`
}

func (x *RateTaskReq) Reset() {
	*x = RateTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateTaskReq) ProtoMessage() {}

func (x *RateTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateTaskReq.ProtoReflect.Descriptor instead.
func (*RateTaskReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{39}
}

func (x *RateTaskReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *RateTaskReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *RateTaskReq) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *RateTaskReq) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

type GetVerifiedTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetVerifiedTasksReq) Reset() {
	*x = GetVerifiedTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifiedTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifiedTasksReq) ProtoMessage() {}

func (x *GetVerifiedTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifiedTasksReq.ProtoReflect.Descriptor instead.
func (*GetVerifiedTasksReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{40}
}

func (x *GetVerifiedTasksReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetVerifiedTasksRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberID string  `protobuf:"bytes,1,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	Rating   float32 `protobuf:"fixed32,2,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Feedback string  `protobuf:"bytes,3,opt,name=Feedback,proto3" json:"Feedback,omitempty"`
}

func (x *GetVerifiedTasksRes) Reset() {
	*x = GetVerifiedTasksRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifiedTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifiedTasksRes) ProtoMessage() {}

func (x *GetVerifiedTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifiedTasksRes.ProtoReflect.Descriptor instead.
func (*GetVerifiedTasksRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{41}
}

func (x *GetVerifiedTasksRes) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *GetVerifiedTasksRes) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *GetVerifiedTasksRes) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

type GetfeedBackforTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID  string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
}

func (x *GetfeedBackforTaskReq) Reset() {
	*x = GetfeedBackforTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetfeedBackforTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetfeedBackforTaskReq) ProtoMessage() {}

func (x *GetfeedBackforTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetfeedBackforTaskReq.ProtoReflect.Descriptor instead.
func (*GetfeedBackforTaskReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{42}
}

func (x *GetfeedBackforTaskReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetfeedBackforTaskReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type GetfeedBackforTaskRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating   float32 `protobuf:"fixed32,1,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Feedback string  `protobuf:"bytes,2,opt,name=Feedback,proto3" json:"Feedback,omitempty"`
}

func (x *GetfeedBackforTaskRes) Reset() {
	*x = GetfeedBackforTaskRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetfeedBackforTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetfeedBackforTaskRes) ProtoMessage() {}

func (x *GetfeedBackforTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetfeedBackforTaskRes.ProtoReflect.Descriptor instead.
func (*GetfeedBackforTaskRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{43}
}

func (x *GetfeedBackforTaskRes) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *GetfeedBackforTaskRes) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

type RequestforDeadlineExtensionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID    string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	ExetendTo   string `protobuf:"bytes,3,opt,name=ExetendTo,proto3" json:"ExetendTo,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *RequestforDeadlineExtensionReq) Reset() {
	*x = RequestforDeadlineExtensionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestforDeadlineExtensionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestforDeadlineExtensionReq) ProtoMessage() {}

func (x *RequestforDeadlineExtensionReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestforDeadlineExtensionReq.ProtoReflect.Descriptor instead.
func (*RequestforDeadlineExtensionReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{44}
}

func (x *RequestforDeadlineExtensionReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *RequestforDeadlineExtensionReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *RequestforDeadlineExtensionReq) GetExetendTo() string {
	if x != nil {
		return x.ExetendTo
	}
	return ""
}

func (x *RequestforDeadlineExtensionReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetExtensionRequestsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *GetExtensionRequestsReq) Reset() {
	*x = GetExtensionRequestsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExtensionRequestsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExtensionRequestsReq) ProtoMessage() {}

func (x *GetExtensionRequestsReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExtensionRequestsReq.ProtoReflect.Descriptor instead.
func (*GetExtensionRequestsReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{45}
}

func (x *GetExtensionRequestsReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetExtensionRequestsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	MemberID    string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	ExetendTo   string `protobuf:"bytes,3,opt,name=ExetendTo,proto3" json:"ExetendTo,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *GetExtensionRequestsRes) Reset() {
	*x = GetExtensionRequestsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExtensionRequestsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExtensionRequestsRes) ProtoMessage() {}

func (x *GetExtensionRequestsRes) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExtensionRequestsRes.ProtoReflect.Descriptor instead.
func (*GetExtensionRequestsRes) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{46}
}

func (x *GetExtensionRequestsRes) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GetExtensionRequestsRes) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *GetExtensionRequestsRes) GetExetendTo() string {
	if x != nil {
		return x.ExetendTo
	}
	return ""
}

func (x *GetExtensionRequestsRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GrantExtensionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	IsApproved bool   `protobuf:"varint,2,opt,name=IsApproved,proto3" json:"IsApproved,omitempty"`
}

func (x *GrantExtensionReq) Reset() {
	*x = GrantExtensionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantExtensionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantExtensionReq) ProtoMessage() {}

func (x *GrantExtensionReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantExtensionReq.ProtoReflect.Descriptor instead.
func (*GrantExtensionReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{47}
}

func (x *GrantExtensionReq) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GrantExtensionReq) GetIsApproved() bool {
	if x != nil {
		return x.IsApproved
	}
	return false
}

type VerifyTaskCompletionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID  string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	Verified  bool   `protobuf:"varint,3,opt,name=Verified,proto3" json:"Verified,omitempty"`
}

func (x *VerifyTaskCompletionReq) Reset() {
	*x = VerifyTaskCompletionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTaskCompletionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTaskCompletionReq) ProtoMessage() {}

func (x *VerifyTaskCompletionReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTaskCompletionReq.ProtoReflect.Descriptor instead.
func (*VerifyTaskCompletionReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{48}
}

func (x *VerifyTaskCompletionReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *VerifyTaskCompletionReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *VerifyTaskCompletionReq) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type DropProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *DropProjectReq) Reset() {
	*x = DropProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropProjectReq) ProtoMessage() {}

func (x *DropProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropProjectReq.ProtoReflect.Descriptor instead.
func (*DropProjectReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{49}
}

func (x *DropProjectReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type TerminateProjectMembersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID  string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
}

func (x *TerminateProjectMembersReq) Reset() {
	*x = TerminateProjectMembersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateProjectMembersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateProjectMembersReq) ProtoMessage() {}

func (x *TerminateProjectMembersReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateProjectMembersReq.ProtoReflect.Descriptor instead.
func (*TerminateProjectMembersReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{50}
}

func (x *TerminateProjectMembersReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *TerminateProjectMembersReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type EditProjectDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Description     string `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	ProjectUsername string `protobuf:"bytes,3,opt,name=ProjectUsername,proto3" json:"ProjectUsername,omitempty"`
	Aim             string `protobuf:"bytes,4,opt,name=Aim,proto3" json:"Aim,omitempty"`
}

func (x *EditProjectDetailsReq) Reset() {
	*x = EditProjectDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditProjectDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditProjectDetailsReq) ProtoMessage() {}

func (x *EditProjectDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditProjectDetailsReq.ProtoReflect.Descriptor instead.
func (*EditProjectDetailsReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{51}
}

func (x *EditProjectDetailsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EditProjectDetailsReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditProjectDetailsReq) GetProjectUsername() string {
	if x != nil {
		return x.ProjectUsername
	}
	return ""
}

func (x *EditProjectDetailsReq) GetAim() string {
	if x != nil {
		return x.Aim
	}
	return ""
}

type EditMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberID     string `protobuf:"bytes,1,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	PermissionID uint32 `protobuf:"varint,2,opt,name=PermissionID,proto3" json:"PermissionID,omitempty"`
	RoleID       uint32 `protobuf:"varint,3,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	ProjectID    string `protobuf:"bytes,4,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *EditMemberReq) Reset() {
	*x = EditMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMemberReq) ProtoMessage() {}

func (x *EditMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMemberReq.ProtoReflect.Descriptor instead.
func (*EditMemberReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{52}
}

func (x *EditMemberReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *EditMemberReq) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *EditMemberReq) GetRoleID() uint32 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *EditMemberReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type DeleteFeedbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID  string `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
}

func (x *DeleteFeedbackReq) Reset() {
	*x = DeleteFeedbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedbackReq) ProtoMessage() {}

func (x *DeleteFeedbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedbackReq.ProtoReflect.Descriptor instead.
func (*DeleteFeedbackReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteFeedbackReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *DeleteFeedbackReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type EditFeedbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string  `protobuf:"bytes,1,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	MemberID  string  `protobuf:"bytes,2,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
	Rating    float32 `protobuf:"fixed32,3,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Feedback  string  `protobuf:"bytes,4,opt,name=Feedback,proto3" json:"Feedback,omitempty"`
}

func (x *EditFeedbackReq) Reset() {
	*x = EditFeedbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditFeedbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditFeedbackReq) ProtoMessage() {}

func (x *EditFeedbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_project_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditFeedbackReq.ProtoReflect.Descriptor instead.
func (*EditFeedbackReq) Descriptor() ([]byte, []int) {
	return file_project_proto_rawDescGZIP(), []int{54}
}

func (x *EditFeedbackReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *EditFeedbackReq) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

func (x *EditFeedbackReq) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *EditFeedbackReq) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

var File_project_proto protoreflect.FileDescriptor

var file_project_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41,
	0x69, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x69, 0x6d, 0x12, 0x26, 0x0a,
	0x0e, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x62, 0x61, 0x73, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x62, 0x61, 0x73, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x61, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x61, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x49, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x69,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x69, 0x6d, 0x12, 0x26, 0x0a, 0x0e,
	0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x62, 0x61, 0x73, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x62,
	0x61, 0x73, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x61, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x61, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x22, 0x7e, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x22, 0x2f, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x4b, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x66,
	0x0a, 0x16, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x22, 0xf6, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x41, 0x69, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x45, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x52, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52,
	0x61, 0x69, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x73, 0x52, 0x61, 0x69, 0x73, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x59, 0x0a, 0x11, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22, 0x65, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74,
	0x6f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x29, 0x0a,
	0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x22, 0xba, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x44, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x22, 0x67, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61,
	0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x25, 0x0a, 0x0f, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x46, 0x69, 0x6c,
	0x65, 0x22, 0x37, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x6f, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0xd3, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x22, 0xa8, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x6f, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x6d, 0x0a, 0x0b, 0x54,
	0x61, 0x73, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22, 0xa1,
	0x01, 0x0a, 0x1d, 0x4d, 0x61, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x66, 0x4e, 0x6f, 0x6e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0xf5, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x76,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x4c, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x54,
	0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x30, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x54, 0x61,
	0x73, 0x6b, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x22, 0x42, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x42, 0x65, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x42, 0x65, 0x6c, 0x6f, 0x77, 0x22, 0x32, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22, 0x86, 0x02, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x28,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x22, 0x4b, 0x0a, 0x13, 0x49, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22,
	0x3c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6f, 0x66, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0x9c, 0x01,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6f, 0x66, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x22, 0x7a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0x77, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x22, 0x87, 0x01, 0x0a, 0x0d, 0x52, 0x61, 0x69, 0x73, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x61, 0x69, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x52, 0x61, 0x69, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x6f, 0x66, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x6f,
	0x66, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x69, 0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x69, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x48, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x69,
	0x73, 0x65, 0x64, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x69,
	0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7b, 0x0a, 0x0b, 0x52, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x22, 0x33, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0x65, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x22, 0x51, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x66, 0x65, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x66,
	0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x66, 0x65, 0x65, 0x64, 0x42, 0x61,
	0x63, 0x6b, 0x66, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x22, 0x9a, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x66, 0x6f, 0x72, 0x44,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x45, 0x78, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x45, 0x78, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x45, 0x78, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x45, 0x78, 0x65, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43,
	0x0a, 0x11, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x22, 0x6f, 0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x22, 0x2e, 0x0a, 0x0e, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x1a, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22, 0x89, 0x01, 0x0a,
	0x15, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x69, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x69, 0x6d, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x45, 0x64, 0x69,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x22, 0x4d, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x7f, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x32, 0x88, 0x16, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12,
	0x48, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x74, 0x6f, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12,
	0x5c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f,
	0x66, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x57, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x1a,
	0x4d, 0x61, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x6f, 0x66, 0x4e, 0x6f,
	0x6e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x6f, 0x66, 0x4e, 0x6f, 0x6e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x30,
	0x01, 0x12, 0x48, 0x0a, 0x10, 0x49, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x49, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x66, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6f, 0x66, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6f, 0x66, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x56,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x52, 0x61, 0x69, 0x73, 0x65, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52,
	0x61, 0x69, 0x73, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x6f, 0x66, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x6f, 0x66, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x6f, 0x66, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x38, 0x0a, 0x08, 0x52, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x54, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x66, 0x65, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b,
	0x66, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x66, 0x65, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x6f, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x66, 0x65, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x6f, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x66, 0x6f, 0x72, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x66, 0x6f, 0x72, 0x44, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x44, 0x0a, 0x0e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x14, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12,
	0x3e, 0x0a, 0x0b, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x56, 0x0a, 0x17, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0c, 0x45, 0x64, 0x69,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x10, 0x5a, 0x0e, 0x2e,
	0x2f, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_proto_rawDescOnce sync.Once
	file_project_proto_rawDescData = file_project_proto_rawDesc
)

func file_project_proto_rawDescGZIP() []byte {
	file_project_proto_rawDescOnce.Do(func() {
		file_project_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_proto_rawDescData)
	})
	return file_project_proto_rawDescData
}

var file_project_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_project_proto_goTypes = []interface{}{
	(*CreateProjectReq)(nil),               // 0: project.CreateProjectReq
	(*CreateProjectRes)(nil),               // 1: project.CreateProjectRes
	(*AddMemberReq)(nil),                   // 2: project.AddMemberReq
	(*ProjectInvitesReq)(nil),              // 3: project.ProjectInvitesReq
	(*ProjectInvitesRes)(nil),              // 4: project.ProjectInvitesRes
	(*AcceptProjectInviteReq)(nil),         // 5: project.AcceptProjectInviteReq
	(*GetProjectReq)(nil),                  // 6: project.GetProjectReq
	(*GetProjectMembersRes)(nil),           // 7: project.GetProjectMembersRes
	(*GetProjectDetailesRes)(nil),          // 8: project.GetProjectDetailesRes
	(*LogintoProjectReq)(nil),              // 9: project.LogintoProjectReq
	(*LogintoProjectRes)(nil),              // 10: project.LogintoProjectRes
	(*MemberStatusReq)(nil),                // 11: project.MemberStatusReq
	(*GetAssignedTaskReq)(nil),             // 12: project.GetAssignedTaskReq
	(*GetAssignedTaskRes)(nil),             // 13: project.GetAssignedTaskRes
	(*DownloadTaskReq)(nil),                // 14: project.DownloadTaskReq
	(*DownloadTaskRes)(nil),                // 15: project.DownloadTaskRes
	(*GetProgressofMembersReq)(nil),        // 16: project.GetProgressofMembersReq
	(*GetProgressofMembersRes)(nil),        // 17: project.GetProgressofMembersRes
	(*GetProgressofMemberRes)(nil),         // 18: project.GetProgressofMemberRes
	(*TaskDetails)(nil),                    // 19: project.TaskDetails
	(*GetProgressofMemberReq)(nil),         // 20: project.GetProgressofMemberReq
	(*MarkProgressofNonTechnicalReq)(nil),  // 21: project.MarkProgressofNonTechnicalReq
	(*GetProjectProgressReq)(nil),          // 22: project.GetProjectProgressReq
	(*GetProjectProgressRes)(nil),          // 23: project.GetProjectProgressRes
	(*AddTaskStatusesReq)(nil),             // 24: project.AddTaskStatusesReq
	(*GetLiveProjectsReq)(nil),             // 25: project.GetLiveProjectsReq
	(*GetLiveProjectsRes)(nil),             // 26: project.GetLiveProjectsRes
	(*IsMemberAcceptedReq)(nil),            // 27: project.IsMemberAcceptedReq
	(*GetStreamofProjectDetailsReq)(nil),   // 28: project.GetStreamofProjectDetailsReq
	(*GetStreamofProjectDetailsRes)(nil),   // 29: project.GetStreamofProjectDetailsRes
	(*GetCompletedMembersReq)(nil),         // 30: project.GetCompletedMembersReq
	(*GetCompletedMembersRes)(nil),         // 31: project.GetCompletedMembersRes
	(*GetCriticalMembersReq)(nil),          // 32: project.GetCriticalMembersReq
	(*GetCriticalMembersRes)(nil),          // 33: project.GetCriticalMembersRes
	(*RaiseIssueReq)(nil),                  // 34: project.RaiseIssueReq
	(*GetIssuesofProjectReq)(nil),          // 35: project.GetIssuesofProjectReq
	(*GetIssuesofProjectRes)(nil),          // 36: project.GetIssuesofProjectRes
	(*GetIssuesReq)(nil),                   // 37: project.GetIssuesReq
	(*GetIssuesRes)(nil),                   // 38: project.GetIssuesRes
	(*RateTaskReq)(nil),                    // 39: project.RateTaskReq
	(*GetVerifiedTasksReq)(nil),            // 40: project.GetVerifiedTasksReq
	(*GetVerifiedTasksRes)(nil),            // 41: project.GetVerifiedTasksRes
	(*GetfeedBackforTaskReq)(nil),          // 42: project.GetfeedBackforTaskReq
	(*GetfeedBackforTaskRes)(nil),          // 43: project.GetfeedBackforTaskRes
	(*RequestforDeadlineExtensionReq)(nil), // 44: project.RequestforDeadlineExtensionReq
	(*GetExtensionRequestsReq)(nil),        // 45: project.GetExtensionRequestsReq
	(*GetExtensionRequestsRes)(nil),        // 46: project.GetExtensionRequestsRes
	(*GrantExtensionReq)(nil),              // 47: project.GrantExtensionReq
	(*VerifyTaskCompletionReq)(nil),        // 48: project.VerifyTaskCompletionReq
	(*DropProjectReq)(nil),                 // 49: project.DropProjectReq
	(*TerminateProjectMembersReq)(nil),     // 50: project.TerminateProjectMembersReq
	(*EditProjectDetailsReq)(nil),          // 51: project.EditProjectDetailsReq
	(*EditMemberReq)(nil),                  // 52: project.EditMemberReq
	(*DeleteFeedbackReq)(nil),              // 53: project.DeleteFeedbackReq
	(*EditFeedbackReq)(nil),                // 54: project.EditFeedbackReq
	(*timestamp.Timestamp)(nil),            // 55: google.protobuf.Timestamp
	(*empty.Empty)(nil),                    // 56: google.protobuf.Empty
}
var file_project_proto_depIdxs = []int32{
	7,  // 0: project.GetProjectDetailesRes.MembersDetails:type_name -> project.GetProjectMembersRes
	55, // 1: project.GetAssignedTaskRes.Deadline:type_name -> google.protobuf.Timestamp
	19, // 2: project.GetProgressofMemberRes.Details:type_name -> project.TaskDetails
	0,  // 3: project.ProjectService.CreateProject:input_type -> project.CreateProjectReq
	2,  // 4: project.ProjectService.AddMembers:input_type -> project.AddMemberReq
	3,  // 5: project.ProjectService.ProjectInvites:input_type -> project.ProjectInvitesReq
	5,  // 6: project.ProjectService.AcceptProjectInvite:input_type -> project.AcceptProjectInviteReq
	6,  // 7: project.ProjectService.GetProjectDetailes:input_type -> project.GetProjectReq
	6,  // 8: project.ProjectService.GetProjectMembers:input_type -> project.GetProjectReq
	9,  // 9: project.ProjectService.LogintoProject:input_type -> project.LogintoProjectReq
	11, // 10: project.ProjectService.AddMemberStatus:input_type -> project.MemberStatusReq
	12, // 11: project.ProjectService.GetAssignedTask:input_type -> project.GetAssignedTaskReq
	14, // 12: project.ProjectService.DownloadTask:input_type -> project.DownloadTaskReq
	16, // 13: project.ProjectService.GetProgressofMembers:input_type -> project.GetProgressofMembersReq
	20, // 14: project.ProjectService.GetProgressofMember:input_type -> project.GetProgressofMemberReq
	22, // 15: project.ProjectService.GetProjectProgress:input_type -> project.GetProjectProgressReq
	21, // 16: project.ProjectService.MarkProgressofNonTechnical:input_type -> project.MarkProgressofNonTechnicalReq
	24, // 17: project.ProjectService.AddTaskStatuses:input_type -> project.AddTaskStatusesReq
	25, // 18: project.ProjectService.GetLiveProjects:input_type -> project.GetLiveProjectsReq
	27, // 19: project.ProjectService.IsMemberAccepted:input_type -> project.IsMemberAcceptedReq
	28, // 20: project.ProjectService.GetStreamofProjectDetails:input_type -> project.GetStreamofProjectDetailsReq
	30, // 21: project.ProjectService.GetCompletedMembers:input_type -> project.GetCompletedMembersReq
	32, // 22: project.ProjectService.GetCriticalMembers:input_type -> project.GetCriticalMembersReq
	34, // 23: project.ProjectService.RaiseIssue:input_type -> project.RaiseIssueReq
	37, // 24: project.ProjectService.GetIssues:input_type -> project.GetIssuesReq
	35, // 25: project.ProjectService.GetIssuesofProject:input_type -> project.GetIssuesofProjectReq
	39, // 26: project.ProjectService.RateTask:input_type -> project.RateTaskReq
	42, // 27: project.ProjectService.GetfeedBackforTask:input_type -> project.GetfeedBackforTaskReq
	44, // 28: project.ProjectService.RequestforDeadlineExtension:input_type -> project.RequestforDeadlineExtensionReq
	45, // 29: project.ProjectService.GetExtensionRequests:input_type -> project.GetExtensionRequestsReq
	47, // 30: project.ProjectService.GrantExtension:input_type -> project.GrantExtensionReq
	48, // 31: project.ProjectService.VerifyTaskCompletion:input_type -> project.VerifyTaskCompletionReq
	40, // 32: project.ProjectService.GetVerifiedTasks:input_type -> project.GetVerifiedTasksReq
	49, // 33: project.ProjectService.DropProject:input_type -> project.DropProjectReq
	50, // 34: project.ProjectService.TerminateProjectMembers:input_type -> project.TerminateProjectMembersReq
	51, // 35: project.ProjectService.EditProjectDetails:input_type -> project.EditProjectDetailsReq
	52, // 36: project.ProjectService.EditMember:input_type -> project.EditMemberReq
	53, // 37: project.ProjectService.DeleteFeedback:input_type -> project.DeleteFeedbackReq
	54, // 38: project.ProjectService.EditFeedback:input_type -> project.EditFeedbackReq
	1,  // 39: project.ProjectService.CreateProject:output_type -> project.CreateProjectRes
	56, // 40: project.ProjectService.AddMembers:output_type -> google.protobuf.Empty
	4,  // 41: project.ProjectService.ProjectInvites:output_type -> project.ProjectInvitesRes
	56, // 42: project.ProjectService.AcceptProjectInvite:output_type -> google.protobuf.Empty
	8,  // 43: project.ProjectService.GetProjectDetailes:output_type -> project.GetProjectDetailesRes
	7,  // 44: project.ProjectService.GetProjectMembers:output_type -> project.GetProjectMembersRes
	10, // 45: project.ProjectService.LogintoProject:output_type -> project.LogintoProjectRes
	56, // 46: project.ProjectService.AddMemberStatus:output_type -> google.protobuf.Empty
	13, // 47: project.ProjectService.GetAssignedTask:output_type -> project.GetAssignedTaskRes
	15, // 48: project.ProjectService.DownloadTask:output_type -> project.DownloadTaskRes
	17, // 49: project.ProjectService.GetProgressofMembers:output_type -> project.GetProgressofMembersRes
	18, // 50: project.ProjectService.GetProgressofMember:output_type -> project.GetProgressofMemberRes
	23, // 51: project.ProjectService.GetProjectProgress:output_type -> project.GetProjectProgressRes
	56, // 52: project.ProjectService.MarkProgressofNonTechnical:output_type -> google.protobuf.Empty
	56, // 53: project.ProjectService.AddTaskStatuses:output_type -> google.protobuf.Empty
	26, // 54: project.ProjectService.GetLiveProjects:output_type -> project.GetLiveProjectsRes
	56, // 55: project.ProjectService.IsMemberAccepted:output_type -> google.protobuf.Empty
	8,  // 56: project.ProjectService.GetStreamofProjectDetails:output_type -> project.GetProjectDetailesRes
	31, // 57: project.ProjectService.GetCompletedMembers:output_type -> project.GetCompletedMembersRes
	33, // 58: project.ProjectService.GetCriticalMembers:output_type -> project.GetCriticalMembersRes
	56, // 59: project.ProjectService.RaiseIssue:output_type -> google.protobuf.Empty
	38, // 60: project.ProjectService.GetIssues:output_type -> project.GetIssuesRes
	36, // 61: project.ProjectService.GetIssuesofProject:output_type -> project.GetIssuesofProjectRes
	56, // 62: project.ProjectService.RateTask:output_type -> google.protobuf.Empty
	43, // 63: project.ProjectService.GetfeedBackforTask:output_type -> project.GetfeedBackforTaskRes
	56, // 64: project.ProjectService.RequestforDeadlineExtension:output_type -> google.protobuf.Empty
	46, // 65: project.ProjectService.GetExtensionRequests:output_type -> project.GetExtensionRequestsRes
	56, // 66: project.ProjectService.GrantExtension:output_type -> google.protobuf.Empty
	56, // 67: project.ProjectService.VerifyTaskCompletion:output_type -> google.protobuf.Empty
	41, // 68: project.ProjectService.GetVerifiedTasks:output_type -> project.GetVerifiedTasksRes
	56, // 69: project.ProjectService.DropProject:output_type -> google.protobuf.Empty
	56, // 70: project.ProjectService.TerminateProjectMembers:output_type -> google.protobuf.Empty
	56, // 71: project.ProjectService.EditProjectDetails:output_type -> google.protobuf.Empty
	56, // 72: project.ProjectService.EditMember:output_type -> google.protobuf.Empty
	56, // 73: project.ProjectService.DeleteFeedback:output_type -> google.protobuf.Empty
	56, // 74: project.ProjectService.EditFeedback:output_type -> google.protobuf.Empty
	39, // [39:75] is the sub-list for method output_type
	3,  // [3:39] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_project_proto_init() }
func file_project_proto_init() {
	if File_project_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_project_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInvitesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInvitesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptProjectInviteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectMembersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectDetailesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogintoProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogintoProjectRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAssignedTaskRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadTaskRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgressofMembersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgressofMembersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgressofMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgressofMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkProgressofNonTechnicalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectProgressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectProgressRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTaskStatusesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveProjectsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveProjectsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsMemberAcceptedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamofProjectDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamofProjectDetailsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompletedMembersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompletedMembersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCriticalMembersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCriticalMembersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaiseIssueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssuesofProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssuesofProjectRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssuesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssuesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifiedTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifiedTasksRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetfeedBackforTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetfeedBackforTaskRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestforDeadlineExtensionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExtensionRequestsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExtensionRequestsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantExtensionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTaskCompletionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateProjectMembersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditProjectDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditFeedbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_project_proto_goTypes,
		DependencyIndexes: file_project_proto_depIdxs,
		MessageInfos:      file_project_proto_msgTypes,
	}.Build()
	File_project_proto = out.File
	file_project_proto_rawDesc = nil
	file_project_proto_goTypes = nil
	file_project_proto_depIdxs = nil
}
